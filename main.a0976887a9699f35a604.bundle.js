/*! For license information please see main.a0976887a9699f35a604.bundle.js.LICENSE.txt */
(()=>{var e,t={404:function(e){"use strict";e.exports=function(){function e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function t(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function n(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&i(e,t)}function r(e){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function i(e,t){return(i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e,t){return!t||"object"!=typeof t&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function a(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,o=r(e);if(t){var i=r(this).constructor;n=Reflect.construct(o,arguments,i)}else n=o.apply(this,arguments);return s(this,n)}}function c(e,t,n){return(c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=r(e)););return e}(e,t);if(o){var i=Object.getOwnPropertyDescriptor(o,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}var l=Phaser.Input.Keyboard.Key,u=Phaser.Input.Keyboard.KeyCodes,d=function(){function t(n){e(this,t),this.cursorKeys={up:new l(n,u.UP),down:new l(n,u.DOWN),left:new l(n,u.LEFT),right:new l(n,u.RIGHT)},this.noKeyDown=!0}return n(t,[{key:"shutdown",value:function(){for(var e in this.cursorKeys)this.cursorKeys[e].destroy();this.cursorKeys=void 0}},{key:"destroy",value:function(e){shutdown(e)}},{key:"createCursorKeys",value:function(){return this.cursorKeys}},{key:"setKeyState",value:function(e,t){var n=this.cursorKeys[e];return n.enabled&&(t&&(this.noKeyDown=!1),n.isDown!==t&&(h.timeStamp=Date.now(),t?n.onDown(h):n.onUp(h))),this}},{key:"clearAllKeysState",value:function(){for(var e in this.noKeyDown=!0,this.cursorKeys)this.setKeyState(e,!1);return this}},{key:"getKeyState",value:function(e){return this.cursorKeys[e]}},{key:"upKeyDown",get:function(){return this.cursorKeys.up.isDown}},{key:"downKeyDown",get:function(){return this.cursorKeys.down.isDown}},{key:"leftKeyDown",get:function(){return this.cursorKeys.left.isDown}},{key:"rightKeyDown",get:function(){return this.cursorKeys.right.isDown}},{key:"anyKeyDown",get:function(){return!this.noKeyDown}}]),t}(),h={altKey:!1,ctrlKey:!1,shiftKey:!1,metaKey:!1,location:0},p=180/Math.PI,f={"up&down":0,"left&right":1,"4dir":2,"8dir":3},m={},v=Phaser.Utils.Objects.GetValue,g=Phaser.Math.Distance.Between,y=Phaser.Math.Angle.Between,x=function(){o(r,d);var t=a(r);function r(n,o){var i;return e(this,r),(i=t.call(this,n)).resetFromJSON(o),i}return n(r,[{key:"resetFromJSON",value:function(e){null==this.start&&(this.start={}),null==this.end&&(this.end={}),this._enable=void 0,this.setEnable(v(e,"enable",!0)),this.setMode(v(e,"dir","8dir")),this.setDistanceThreshold(v(e,"forceMin",16));var t=v(e,"start.x",null),n=v(e,"start.y",null),o=v(e,"end.x",null),r=v(e,"end.y",null);return this.setVector(t,n,o,r),this}},{key:"toJSON",value:function(){return{enable:this.enable,dir:this.dirMode,forceMin:this.forceMin,start:{x:this.start.x,y:this.start.y},end:{x:this.end.x,y:this.end.y}}}},{key:"setMode",value:function(e){return"string"==typeof e&&(e=f[e]),this.dirMode=e,this}},{key:"enable",get:function(){return this._enable},set:function(e){if(this._enable!==e)return e||this.clearVector(),this._enable=e,this}},{key:"setEnable",value:function(e){return void 0===e&&(e=!0),this.enable=e,this}},{key:"toggleEnable",value:function(){return this.setEnable(!this.enable),this}},{key:"setDistanceThreshold",value:function(e){return e<0&&(e=0),this.forceMin=e,this}},{key:"clearVector",value:function(){return this.start.x=0,this.start.y=0,this.end.x=0,this.end.y=0,this.clearAllKeysState(),this}},{key:"setVector",value:function(e,t,n,o){if(this.clearVector(),!this.enable)return this;if(null===e)return this;if(void 0===n&&(n=e,o=t,t=e=0),this.start.x=e,this.start.y=t,this.end.x=n,this.end.y=o,0<this.forceMin&&this.force<this.forceMin)return this;var r=function(e,t,n){switch(void 0===n?n={}:!0===n&&(n=m),n.left=!1,n.right=!1,n.up=!1,n.down=!1,e=(e+360)%360,t){case 0:e<180?n.down=!0:n.up=!0;break;case 1:90<e&&e<=270?n.left=!0:n.right=!0;break;case 2:45<e&&e<=135?n.down=!0:135<e&&e<=225?n.left=!0:225<e&&e<=315?n.up=!0:n.right=!0;break;case 3:22.5<e&&e<=67.5?(n.down=!0,n.right=!0):67.5<e&&e<=112.5?n.down=!0:112.5<e&&e<=157.5?(n.down=!0,n.left=!0):157.5<e&&e<=202.5?n.left=!0:202.5<e&&e<=247.5?(n.left=!0,n.up=!0):247.5<e&&e<=292.5?n.up=!0:(292.5<e&&e<=337.5&&(n.up=!0),n.right=!0)}return n}(this.angle,this.dirMode,!0);for(var i in r)r[i]&&this.setKeyState(i,!0);return this}},{key:"forceX",get:function(){return this.end.x-this.start.x}},{key:"forceY",get:function(){return this.end.y-this.start.y}},{key:"force",get:function(){return g(this.start.x,this.start.y,this.end.x,this.end.y)}},{key:"rotation",get:function(){return y(this.start.x,this.start.y,this.end.x,this.end.y)}},{key:"angle",get:function(){return this.rotation*p}},{key:"octant",get:function(){var e=0;return this.rightKeyDown?e=this.downKeyDown?45:0:this.downKeyDown?e=this.leftKeyDown?135:90:this.leftKeyDown?e=this.upKeyDown?225:180:this.upKeyDown&&(e=this.rightKeyDown?315:270),e}}]),r}(),w={setEventEmitter:function(e,t){return void 0===t&&(t=Phaser.Events.EventEmitter),this._privateEE=!0===e||void 0===e,this._eventEmitter=this._privateEE?new t:e,this},destroyEventEmitter:function(){return this._eventEmitter&&this._privateEE&&this._eventEmitter.shutdown(),this},getEventEmitter:function(){return this._eventEmitter},on:function(){return this._eventEmitter&&this._eventEmitter.on.apply(this._eventEmitter,arguments),this},once:function(){return this._eventEmitter&&this._eventEmitter.once.apply(this._eventEmitter,arguments),this},off:function(){return this._eventEmitter&&this._eventEmitter.off.apply(this._eventEmitter,arguments),this},emit:function(e){return this._eventEmitter&&e&&this._eventEmitter.emit.apply(this._eventEmitter,arguments),this},addListener:function(){return this._eventEmitter&&this._eventEmitter.addListener.apply(this._eventEmitter,arguments),this},removeListener:function(){return this._eventEmitter&&this._eventEmitter.removeListener.apply(this._eventEmitter,arguments),this},removeAllListeners:function(){return this._eventEmitter&&this._eventEmitter.removeAllListeners.apply(this._eventEmitter,arguments),this},listenerCount:function(){return this._eventEmitter?this._eventEmitter.listenerCount.apply(this._eventEmitter,arguments):0},listeners:function(){return this._eventEmitter?this._eventEmitter.listeners.apply(this._eventEmitter,arguments):[]},eventNames:function(){return this._eventEmitter?this._eventEmitter.eventNames.apply(this._eventEmitter,arguments):[]}},b=Phaser.Utils.Objects.GetValue,k=Phaser.Geom.Circle,P=Phaser.Geom.Circle.Contains,_=function(){o(i,x);var t=a(i);function i(n,o){var r;e(this,i);var s=n.scene;r=t.call(this,s,o);var a=b(o,"eventEmitter",void 0),c=b(o,"EventEmitterClass",void 0);return r.setEventEmitter(a,c),r.scene=s,r.gameObject=n,r.radius=b(o,"radius",100),n.setInteractive(new k(n.displayOriginX,n.displayOriginY,r.radius),P),r.boot(),r}return n(i,[{key:"resetFromJSON",value:function(e){return c(r(i.prototype),"resetFromJSON",this).call(this,e),this.pointer=void 0,this}},{key:"toJSON",value:function(){var e=c(r(i.prototype),"toJSON",this).call(this);return e.radius=this.radius,e}},{key:"boot",value:function(){this.gameObject.on("pointerdown",this.onKeyDownStart,this),this.gameObject.on("pointerover",this.onKeyDownStart,this),this.scene.input.on("pointermove",this.onKeyDown,this),this.scene.input.on("pointerup",this.onKeyUp,this),this.gameObject.once("destroy",this.onParentDestroy,this)}},{key:"shutdown",value:function(){this.scene&&(this.scene.input.off("pointermove",this.onKeyDown,this),this.scene.input.off("pointerup",this.onKeyUp,this),this.destroyEventEmitter(),this.pointer=void 0,this.scene=void 0,this.gameObject=void 0,c(r(i.prototype),"shutdown",this).call(this))}},{key:"destroy",value:function(e){this.shutdown(e)}},{key:"onParentDestroy",value:function(e,t){this.destroy(t)}},{key:"onKeyDownStart",value:function(e){e.isDown&&void 0===this.pointer&&(this.pointer=e,this.onKeyDown(e))}},{key:"onKeyDown",value:function(e){this.pointer===e&&e.camera&&(this.setVector(this.gameObject.x+e.camera.scrollX,this.gameObject.y+e.camera.scrollY,e.worldX,e.worldY),this.emit("update"))}},{key:"onKeyUp",value:function(e){this.pointer===e&&(this.pointer=void 0,this.clearVector(),this.emit("update"))}}]),i}();Object.assign(_.prototype,w);var z=Phaser.Utils.Objects.GetValue,S=function(){function t(n,o){e(this,t),void 0===o&&(o={});var r=z(o,"eventEmitter",void 0),i=z(o,"EventEmitterClass",void 0);this.setEventEmitter(r,i),o.eventEmitter=this.getEventEmitter(),this.scene=n,this.base=void 0,this.thumb=void 0,this.touchCursor=void 0,this.setRadius(z(o,"radius",100)),this.addBase(z(o,"base",void 0),o),this.addThumb(z(o,"thumb",void 0));var s=z(o,"x",0),a=z(o,"y",0);this.base.setPosition(s,a),this.thumb.setPosition(s,a),z(o,"fixed",!0)&&this.setScrollFactor(0),this.boot()}return n(t,[{key:"destroy",value:function(){this.destroyEventEmitter(),this.base.destroy(),this.thumb.destroy(),this.base=void 0,this.thumb=void 0,this.touchCursor=void 0}},{key:"createCursorKeys",value:function(){return this.touchCursor.createCursorKeys()}},{key:"forceX",get:function(){return this.touchCursor.forceX}},{key:"forceY",get:function(){return this.touchCursor.forceY}},{key:"force",get:function(){return this.touchCursor.force}},{key:"rotation",get:function(){return this.touchCursor.rotation}},{key:"angle",get:function(){return this.touchCursor.angle}},{key:"up",get:function(){return this.touchCursor.upKeyDown}},{key:"down",get:function(){return this.touchCursor.downKeyDown}},{key:"left",get:function(){return this.touchCursor.leftKeyDown}},{key:"right",get:function(){return this.touchCursor.rightKeyDown}},{key:"noKey",get:function(){return this.touchCursor.noKeyDown}},{key:"pointerX",get:function(){return this.touchCursor.end.x}},{key:"pointerY",get:function(){return this.touchCursor.end.y}},{key:"pointer",get:function(){return this.touchCursor.pointer}},{key:"setPosition",value:function(e,t){return this.x=e,this.y=t,this}},{key:"x",get:function(){return this.base.x},set:function(e){this.base.x=e,this.thumb.x=e}},{key:"y",get:function(){return this.base.y},set:function(e){this.base.y=e,this.thumb.y=e}},{key:"setVisible",value:function(e){return this.visible=e,this}},{key:"toggleVisible",value:function(){return this.visible=!this.visible,this}},{key:"visible",get:function(){return this.base.visible},set:function(e){this.base.visible=e,this.thumb.visible=e}},{key:"enable",get:function(){return this.touchCursor.enable},set:function(e){this.touchCursor.setEnable(e)}},{key:"setEnable",value:function(e){return void 0===e&&(e=!0),this.enable=e,this}},{key:"toggleEnable",value:function(){return this.setEnable(!this.enable),this}},{key:"setRadius",value:function(e){return this.radius=e,this}},{key:"addBase",value:function(e,t){return this.base&&this.base.destroy(),void 0===e&&(e=this.scene.add.circle(0,0,this.radius).setStrokeStyle(3,255)),this.touchCursor=new _(e,t),this.base=e,this}},{key:"addThumb",value:function(e){return this.thumb&&this.thumb.destroy(),void 0===e&&(e=this.scene.add.circle(0,0,40).setStrokeStyle(3,65280)),this.thumb=e,this}},{key:"setScrollFactor",value:function(e){return this.base.setScrollFactor(e),this.thumb.setScrollFactor(e),this}},{key:"boot",value:function(){this.touchCursor.on("update",this.update,this)}},{key:"update",value:function(){var e=this.touchCursor,t=this.base.x,n=this.base.y;if(e.anyKeyDown)if(e.force>this.radius){var o=e.rotation;t+=Math.cos(o)*this.radius,n+=Math.sin(o)*this.radius}else t+=e.forceX,n+=e.forceY;return this.thumb.x=t,this.thumb.y=n,this}}]),t}();return Object.assign(S.prototype,w),function(){o(r,Phaser.Plugins.BasePlugin);var t=a(r);function r(n){return e(this,r),t.call(this,n)}return n(r,[{key:"start",value:function(){this.game.events.on("destroy",this.destroy,this)}},{key:"add",value:function(e,t){return new S(e,t)}}]),r}()}()},529:(e,t,n)=>{"use strict";var o=n(379),r=n.n(o),i=n(795),s=n.n(i),a=n(569),c=n.n(a),l=n(565),u=n.n(l),d=n(216),h=n.n(d),p=n(589),f=n.n(p),m=n(802),v={};v.styleTagTransform=f(),v.setAttributes=u(),v.insert=c().bind(null,"head"),v.domAPI=s(),v.insertStyleElement=h(),r()(m.Z,v),m.Z&&m.Z.locals&&m.Z.locals;var g,y=n(260),x=n.n(y),w=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{c(o.next(e))}catch(e){i(e)}}function a(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))};class b{static getFileType(e,t){return w(this,void 0,void 0,(function*(){const n=e.cache.json.get("resources_main").assets.filter((e=>Object.keys(e).toString()===t));return Object.entries(n[0])[0][1].endsWith("glb")?"glb":"fbx"}))}}b.numbers={multiplyDecimals:(e,t)=>10*e+10*t},b.strings={joinWithUnderscore:function(e,t){return e+`_${t}`},replaceUnderscore:function(e){let t=[];for(let n=0;n<e.length;n++)t.push(e[n]);return t.includes("_")?e.toString().replaceAll("_"," "):e},removeUnderscore:function(e){let t=[];for(let n=0;n<e.length;n++)t.push(e[n]);return t.includes("_")?e.toString().replaceAll("_",""):e},removeStringPart:function(e,t){return w(this,void 0,void 0,(function*(){return e.toString().replace(t,"")}))},removeNumbers:function(e){return w(this,void 0,void 0,(function*(){let t=[],n=["0","1","2","3","4","5","6","7","8","9"];for(let n=0;n<e.length;n++)t.push(e[n]);return yield(()=>w(this,void 0,void 0,(function*(){for(let e=0;e<t.length;e++)if(n.includes(t[e].toString()))return t.filter((e=>isNaN(parseInt(e)))).join("");return e})))()}))},removeJunk:function(e){return w(this,void 0,void 0,(function*(){const t=this.replaceUnderscore(e),n=yield this.removeNumbers(t);return yield this.removeStringPart(n,"tile")}))},checkSpace:function(e){return w(this,void 0,void 0,(function*(){return e.includes(" ")?e.replace(" ",""):e}))},checkVowel:function(e){return w(this,void 0,void 0,(function*(){const t=e[0];let n=["A","a","E","e","I","i","O","o","U","u"].includes(t)?"an ":"a ";return e.endsWith("s")&&(n=""),n}))}},function(e){class t{constructor(){this.width=innerWidth,this.height=1e3,this.min={width:0,height:0},this.max={width:0,height:0},this.orientation={on:(e,n,o)=>{null!==typeof screen.orientation&&void 0!==typeof screen.orientation&&t.mobileAndTabletCheck()&&screen.orientation.addEventListener(e,n,o)},off:(e,n,o)=>{screen.orientation&&t.mobileAndTabletCheck()&&screen.orientation.removeEventListener(e,n,o)},lock:e=>{null!==typeof screen.orientation.lock&&void 0!==typeof screen.orientation&&t.mobileAndTabletCheck()&&screen.orientation.lock(e)},unlock:()=>{null!==typeof screen.orientation.unlock&&void 0!==typeof screen.orientation&&t.mobileAndTabletCheck()&&screen.orientation.unlock()}},this.parent="game",this.key="",this.mode=0,this.setup={key:"",physics:{arcade:{gravity:{y:0},useTicker:!0,debug:!1},matter:{gravity:{y:3},Body:null,Bodies:null,debug:!1}}};const{Body:e,Bodies:n}=Phaser.Physics.Matter.Matter;this.setup.physics.matter.Body=e,this.setup.physics.matter.Bodies=n,t.mobileAndTabletCheck()?(this.inputType="touch",this.mode=Phaser.Scale.RESIZE,this.position=Phaser.Scale.NO_CENTER,this.min.width=240,this.min.height=480,this.max.width=3e3,this.max.height=1400):(this.inputType="generic",this.mode=Phaser.Scale.FIT,this.position=Phaser.Scale.CENTER_HORIZONTALLY)}static mobileAndTabletCheck(){let e=!1;var t;return t=navigator.userAgent||navigator.vendor||window.opera,(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4)))&&(e=!0),e}static isDesktop(n){return!!(!t.mobileAndTabletCheck()&&e.Config.isLandscape(n)||e.Process.width>540)}static isLandscape(e){return"landscape-primary"===e.scale.orientation.toString()||"landscape-secondary"===e.scale.orientation.toString()||"landscape"===e.scale.orientation.toString()}static isPortrait(e){return"portrait-primary"===e.scale.orientation.toString()||"portrait-primary"===e.scale.orientation.toString()||"portrait"===e.scale.orientation.toString()}static vibrate(e){navigator.vibrate=navigator.vibrate||navigator.webkitVibrate||navigator.mozVibrate||navigator.msVibrate,navigator.vibrate,navigator.vibrate(e)}static makeTransparantBackground(e){"function"==typeof e.scene.stop&&e.scene.stop("Background");let t=document.getElementById("game");null!==t&&(t.getElementsByTagName("canvas")[0].style.backgroundColor="transparent")}}t.internet={connected:!1,proxy:!0},t.utils=b,e.Config=t,e.Process=new t}(g||(g={}));class k extends Phaser.Scene{constructor(){g.Process.setup.key="GamePlay",super(g.Process.setup)}init(e){this.data=e,g.Process.app.game.levelType=e.currentStage.includes("Overworld")?"overworld":"platformer"}create(){return e=this,t=void 0,o=function*(){yield g.Process.app.game.init(this),this.data.currentStage},new((n=void 0)||(n=Promise))((function(r,i){function s(e){try{c(o.next(e))}catch(e){i(e)}}function a(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}));var e,t,n,o}}var P=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{c(o.next(e))}catch(e){i(e)}}function a(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))};class _{constructor(){this.currentStage="Bar_Overworld",this.spawnPoint="start"}static get completed(){g.Process.app.gameData;const e=[];return e.filter((e=>!0===e)).length/e.length*100}static setGameSchema(e,t,n){return P(this,void 0,void 0,(function*(){const o={config:t};return g.Process.app.gameData=o.config,console.log(`retrieved data from ${e} storage.`),n&&n(g.Process.app.gameData),g.Process.app.gameData}))}static retrieveExternal(e){return P(this,void 0,void 0,(function*(){return yield g.Process.app.ajax.xhr("retrieve-external","POST",{username:g.Process.app.account.username,webtoken:localStorage.getItem("webtoken")}),null}))}static dataCheck(){return P(this,void 0,void 0,(function*(){const e=localStorage.getItem("save"),t=null!==e&&JSON.parse(e);return new Promise((e=>P(this,void 0,void 0,(function*(){return!0===g.Process.app.account.loggedIn?yield _.retrieveExternal(e):t?yield _.setGameSchema("local",t,e):void e(null)}))))}))}}class z{static addRects(e,t,n){var o,r;const i=null===(o=z.currentStage.map)||void 0===o?void 0:o.getObjectLayer(t),s=null===(r=z.currentStage.map)||void 0===r?void 0:r.getObjectLayer(n),a=z.scene.physics.add.group({runChildUpdate:!0});null==i||i.objects.map((t=>{if("matter"===e)z.scene.matter.add.rectangle(t.x+t.width/2,t.y+t.height/2,t.width,t.height,{isStatic:!0,collisionFilter:{group:2}});else{const e=z.scene.add.rectangle(t.x+t.width/2,t.y+t.height/2,t.width,t.height);z.scene.physics.world.enable(e),e.body.moves=!1,a.add(e)}})),null==s||s.objects.map((t=>{"matter"===e&&z.scene.matter.add.trapezoid(t.x,t.y,t.width,t.height,1,{isStatic:!0})})),z.scene.physics.add.collider(g.Process.app.game.groups.player,a)}static init(e){return t=this,n=void 0,r=function*(){z.scene=e;const t=e.data.currentStage;switch(z.currentStage.map=t.includes("Overworld")?e.add.tilemap(t):e.make.tilemap({key:t}).setCollisionByProperty({collides:!0}),t){case"Bar_Overworld":!function(e){var t;z.currentStage.map&&(z.tileset=z.currentStage.map.addTilesetImage("bar-venue-good")),g.Process.app.game.groups.door.add(e.add.zone(260,190,30,40).setName("door1")),null===(t=z.currentStage.map)||void 0===t||t.createLayer("good",z.tileset,0,0),z.addRects(null,"rect-good")}(e);break;case"Cave_Overworld":!function(e){var t,n,o,r,i,s;z.currentStage.map&&(z.tileset=z.currentStage.map.addTilesetImage("tiles"));const a=[e.add.zone(304,1056,30,40).setName("door1"),e.add.zone(608,912,30,40).setName("door2"),e.add.zone(848,912,30,40).setName("door3"),e.add.zone(1232,1136,30,40).setName("door4"),e.add.zone(1392,208,30,40).setName("door5"),e.add.zone(608,704,30,40).setName("door6"),e.add.zone(384,704,30,40).setName("door7"),e.add.zone(192,340,30,40).setName("door8")];for(let e in a)g.Process.app.game.groups.door.add(a[e]);null===(t=z.currentStage.map)||void 0===t||t.createLayer("floor",z.tileset,0,0),null===(n=z.currentStage.map)||void 0===n||n.createLayer("shadow_floor",z.tileset,0,0),null===(o=z.currentStage.map)||void 0===o||o.createLayer("world",z.tileset,0,0),null===(r=z.currentStage.map)||void 0===r||r.createLayer("shadow_world",z.tileset,0,0),null===(i=z.currentStage.map)||void 0===i||i.createLayer("objects_above",z.tileset,0,0).setDepth(1/0),null===(s=z.currentStage.map)||void 0===s||s.createLayer("objects_below",z.tileset,0,0),z.addRects(null,"bounds-rect")}(e);break;case"Cave_Platformer":!function(e){if(e.add.image(900,500,"cave background").setScrollFactor(0),z.currentStage.map){const t=z.currentStage.map.addTilesetImage("platformer");z.currentStage.map.createLayer("background",t,0,0).setScrollFactor(.7,1),z.currentStage.map.createLayer("world3",t,0,0).setScrollFactor(.8,1),z.currentStage.map.createLayer("world2",t,0,0).setScrollFactor(.93,1),z.currentStage.map.createLayer("world4",t,0,0).setScrollFactor(.97,1),z.currentStage.map.createLayer("world5",t,0,0),z.currentStage.map.createLayer("world",t,0,0);const n=z.currentStage.map.createLayer("water1",t,0,0).setDepth(102).setAlpha(.75),o=z.currentStage.map.createLayer("water2",t,0,0).setDepth(102).setAlpha(.75),r=z.currentStage.map.createLayer("fall1",t,0,0),i=z.currentStage.map.createLayer("fall2",t,0,0),s=z.currentStage.map.createLayer("fall3",t,0,0);z.currentStage.map.createLayer("clouds",t,0,0).setScrollFactor(.7,1).setAlpha(.4),z.currentStage.map.createLayer("clouds2",t,0,0).setScrollFactor(.7,1).setAlpha(.4).setDepth(102),z.currentStage.map.createLayer("shadow",t,0,0),z.createAnimation(e,[n,o]),z.createAnimation(e,[r,i,s])}z.addRects("matter","bounds-rect")}(e)}e.physics.world.bounds.width=z.currentStage.map.widthInPixels,e.physics.world.bounds.height=z.currentStage.map.heightInPixels},new((o=void 0)||(o=Promise))((function(e,i){function s(e){try{c(r.next(e))}catch(e){i(e)}}function a(e){try{c(r.throw(e))}catch(e){i(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof o?n:new o((function(e){e(n)}))).then(s,a)}c((r=r.apply(t,n||[])).next())}));var t,n,o,r}static createAnimation(e,t){e.time.addEvent({delay:2e3,callback:()=>{var n,o,r;null===(n=t[1])||void 0===n||n.setAlpha(1),null===(o=t[2])||void 0===o||o.setAlpha(0),null===(r=t[3])||void 0===r||r.setAlpha(0),e.time.delayedCall(500,(()=>{var n,o,r;null===(n=t[1])||void 0===n||n.setAlpha(0),null===(o=t[2])||void 0===o||o.setAlpha(1),null===(r=t[3])||void 0===r||r.setAlpha(0),e.time.delayedCall(500,(()=>{var n,o,r;null===(n=t[1])||void 0===n||n.setAlpha(0),null===(o=t[2])||void 0===o||o.setAlpha(0),null===(r=t[3])||void 0===r||r.setAlpha(1),e.time.delayedCall(500,(()=>{var e,n,o;null===(e=t[1])||void 0===e||e.setAlpha(0),null===(n=t[2])||void 0===n||n.setAlpha(1),null===(o=t[3])||void 0===o||o.setAlpha(0)}))}))}))},callbackScope:e,repeat:-1})}}z.currentStage={key:"",map:null};var S=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{c(o.next(e))}catch(e){i(e)}}function a(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))};class C extends Phaser.Physics.Arcade.Sprite{constructor(e,t,n,o,r){super(e,t,n,"player"),e.add.existing(this),e.physics.add.existing(this),g.Process.app.game.groups.player.add(this),this.play(r,!0).setCollideWorldBounds(!0).setSize(20,10).setScale(.5).setOffset(25,80).setFlipX(o),e.scene.run("Controller",this),this.controls=e.scene.get("Controller"),e.events.on("update",(()=>this.update()))}applyState(e){return S(this,void 0,void 0,(function*(){if("idle"===e){const e=()=>S(this,void 0,void 0,(function*(){switch(this.anims.currentAnim.key){case"sv_walkFront":return"sv_idleFront";case"sv_walkBack":return"sv_idleBack";case"sv_walkRight":return"sv_idleRight";case"sv_walkLeft":return"sv_idleLeft"}})),t=yield e();void 0!==t&&this.play(t,!0),this.setVelocity(0,0)}}))}update(){return S(this,void 0,void 0,(function*(){this.active&&g.Process.app.game.gameState&&(this.body.velocity.y>0&&this.anims.play("sv_walkFront",!0),this.body.velocity.y<0&&this.anims.play("sv_walkBack",!0),0===this.body.velocity.y&&this.body.velocity.x<0&&this.anims.play("sv_walkLeft",!0),0===this.body.velocity.y&&this.body.velocity.x>0&&this.anims.play("sv_walkRight",!0),this.controls.inputs.states.left&&this.setVelocityX(-50),this.controls.inputs.states.right&&this.setVelocityX(50),this.controls.inputs.states.up&&this.setVelocityY(-50),this.controls.inputs.states.down&&this.setVelocityY(50),this.controls.inputs.states.left||this.controls.inputs.states.right||this.controls.inputs.states.up||this.controls.inputs.states.down||this.applyState("idle"))}))}}var B=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{c(o.next(e))}catch(e){i(e)}}function a(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))};class T extends Phaser.Physics.Matter.Sprite{constructor(e,t,n,o,r){super(e.matter.world,t,n,"player"),this.collisionFilter={mask:16777215,group:-1,collidesWith:-1},this.isTouching={middle:!1,ground:!1},e.add.existing(this),e.physics.add.existing(this),this.play(r,!0).setFlipX(o).setCollisionGroup(-1),this.sensors={top:g.Process.setup.physics.matter.Bodies.circle(this.x,this.y-10,15),middle:g.Process.setup.physics.matter.Bodies.circle(this.x,this.y+35,25),bottom:g.Process.setup.physics.matter.Bodies.rectangle(this.x,this.y+70,15,5)},this.compoundBody=g.Process.setup.physics.matter.Body.create({parts:[this.sensors.top,this.sensors.middle,this.sensors.bottom],frictionStatic:.5}),this.setExistingBody(this.compoundBody),this.setOrigin(.5).setDepth(101).setPosition(this.x,this.y).setFixedRotation().setIgnoreGravity(!1),e.scene.run("Controller",this),this.controls=e.scene.get("Controller"),e.events.on("update",(()=>{this.update(),function(e,t){if(t instanceof T){const n=()=>{t.isTouching.middle=!1,t.isTouching.ground=!1};e.matter.world.on("collisionstart",(e=>{e.pairs.forEach((e=>{const{bodyA:n,bodyB:o}=e;111===o.id&&t.setVelocityY(4),o===t.sensors.bottom&&(t.isTouching.ground=!0,t.isTouching.middle=!1),o===t.sensors.middle&&(t.isTouching.middle=!0)}))})).on("collisionactive",(e=>{e.pairs.forEach((e=>{const{bodyA:n,bodyB:o}=e;o.isSensor||o===t.sensors.bottom&&(t.isTouching.ground=!0,t.isTouching.middle=!1)}))})).on("collisionend",(()=>n()))}else e.physics.world.OVERLAP_BIAS=Number.MAX_SAFE_INTEGER}(e,this)}))}applyState(e){return B(this,void 0,void 0,(function*(){switch(this.setState(e),e){case"idle":const e=()=>B(this,void 0,void 0,(function*(){switch(this.anims.currentAnim.key){case"sv_walkRight":case"sv_jumpRight":case"sv_attackRight":return"sv_idleRight";case"sv_walkLeft":case"sv_jumpLeft":case"sv_attackLeft":return"sv_idleLeft"}})),t=yield e();t&&this.play(t,!0);break;case"attack":this.play(this.getData("flipped")?"sv_attackLeft":"sv_attackRight",!0)}}))}update(){return B(this,void 0,void 0,(function*(){this.active&&g.Process.app.game.gameState&&this.controls&&(this.controls.inputs.states.up&&(this.applyForce(new Phaser.Math.Vector2(0,0)),this.isTouching.ground?this.setVelocityY(-20):(this.controls.inputs.states.up=!1,this.anims.currentAnim.key.includes("jump")||this.anims.play(this.getData("flipped")?"sv_jumpLeft":"sv_jumpRight",!0))),this.isTouching.ground?(this.controls.inputs.states.left&&(this.setData("flipped",!0).setVelocityX(-5),this.anims.play("sv_walkLeft",!0)),this.controls.inputs.states.right&&(this.setData("flipped",!1).setVelocityX(5),this.anims.play("sv_walkRight",!0)),this.controls.inputs.states.left||this.controls.inputs.states.right||this.controls.inputs.states.up||this.controls.inputs.states.down||this.applyState("attack"!==this.state?"idle":"attack")):this.isTouching.middle&&this.setVelocityY(10),this.controls.inputs.states.A&&this.applyState("attack"),this.on(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{"attack"===this.state&&this.applyState("idle"),this.controls.inputs.states.A=!1,this.controls.inputs.states.B=!1,this.controls.inputs.states.C=!1,this.controls.inputs.states.D=!1})))}))}}var A=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{c(o.next(e))}catch(e){i(e)}}function a(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))};class D{static init(e){var t,n,o,r,i;return n=this,o=void 0,i=function*(){const n=yield g.Process.app.game.spawns.spawnPlayer(e);if(n){const t=n[0],o=n[1],r=n[2],i=n[3];e.player="overworld"===g.Process.app.game.levelType?new g.Process.app.game.playerOverworld(e,t,o,r,i):new g.Process.app.game.playerPlatformer(e,t,o,r,i),e.cameras.main.startFollow(e.player)}e.physics.add.overlap(null===(t=g.Process.app.game.groups)||void 0===t?void 0:t.player,g.Process.app.game.groups.door,((t,n)=>D.spawnMap(e,n)))},new((r=void 0)||(r=Promise))((function(e,t){function s(e){try{c(i.next(e))}catch(e){t(e)}}function a(e){try{c(i.throw(e))}catch(e){t(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r((function(e){e(n)}))).then(s,a)}c((i=i.apply(n,o||[])).next())}))}}D.spawnPlayer=function(e){return t=this,n=void 0,r=function*(){switch(e.data.currentStage){case"Cave_Platformer":return[100,230,!1,"sv_idleRight"];case"Cave_Overworld":switch(e.data.spawnPoint){case"start":return[150,816,!1,"sv_idleFront"];case"door1":return[304,1066,!1,"sv_idleFront"];case"door2":return[608,982,!1,"sv_idleFront"];case"door3":return[847,937,!1,"sv_idleFront"];case"door4":return[1232,11260,!1,"sv_idleFront"];case"door5":return[1392,250,!1,"sv_idleFront"];case"door6":return[608,580,!1,"sv_idleBack"];case"door7":return[394,580,!1,"sv_idleBack"];case"door8":return[192,436,!1,"sv_idleFront"]}break;case"Bar_Overworld":return[250,226,!1,"sv_idleFront"]}return null},new((o=void 0)||(o=Promise))((function(e,i){function s(e){try{c(r.next(e))}catch(e){i(e)}}function a(e){try{c(r.throw(e))}catch(e){i(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof o?n:new o((function(e){e(n)}))).then(s,a)}c((r=r.apply(t,n||[])).next())}));var t,n,o,r},D.spawnMap=function(e,t){return A(this,void 0,void 0,(function*(){const n=yield(()=>A(this,void 0,void 0,(function*(){switch(e.data.currentStage){case"Cave_Platformer":return"start";case"Bar_Overworld":return"door1"===t.name?["door3","Cave_Overworld"]:["start"];case"Cave_Overworld":switch(t.name){case"door1":return["door7"];case"door2":return["door6"];case"door3":return["start","Bar_Overworld"];case"door4":case"door5":return"";case"door6":return["door2"];case"door7":return["door1"];case"door8":return["door8","Cave_Platformer"];default:return["start"]}default:return[e.data.spawnPoint,e.data.currentStage]}})))();e.data.spawnPoint=n[0],e.data.currentStage=n[1]?n[1]:e.data.currentStage,g.Process.app.game.gameState=!1,e.scene.restart(e.data)}))};class E{static checkZoom(e){!1===e.scene.get("Controller").toggleZoom&&e.cameras.main.setZoom(g.Config.isDesktop(e)?1.2:1)}static init(e){e.data.currentStage.includes("Overworld")?(e.cameras.main.setZoom(2),e.data.currentStage!==g.Process.app.game.maps.currentStage.key?e.time.delayedCall(3e3,(()=>e.cameras.main.zoomTo(4.5,2e3))):e.cameras.main.setZoom(4.5)):g.Process.app.game.maps.currentStage.map&&e.cameras.main.setZoom(.5).zoomTo(2,500).fadeIn(2e3,0,0,0).setBounds(0,0,g.Process.app.game.maps.currentStage.map.widthInPixels,g.Process.app.game.maps.currentStage.map.heightInPixels)}static panFromPlayer(e,t,n){E.isFollowing=!1,e.cameras.main.pan(t,n,500,"Power2").stopFollow(e.player.focalPoint)}static followPlayer(e,t){const n=()=>{this.checkZoom(e),e.cameras.main.startFollow(t.focalPoint);let n=g.Config.isLandscape(e)&&g.Config.isDesktop(e)?t.y-50:t.y;t.focalPoint.setPosition(t.x,n)};!1===E.isFollowing?(e.cameras.main.pan(e.player.x,e.player.y,800),e.time.delayedCall(800,(()=>{e.cameras.main.setZoom(1),n(),E.isFollowing=!0}))):n()}}E.isFollowing=!1;class O{static init(e){return t=this,n=void 0,r=function*(){this.groups={player:e.physics.add.group({runChildUpdate:!0}),door:e.physics.add.staticGroup({runChildUpdate:!0})},O.enemies=[],z.init(e),E.init(e),z.currentStage.key=e.data.currentStage,D.init(e),g.Process.app.toggleDebugGraphics(e),e.cameras.main.fadeIn(300,255,255,255),e.time.delayedCall(1e3,(()=>{e.scene.launch("HUD",e),g.Process.app.game.gameState=!0}))},new((o=void 0)||(o=Promise))((function(e,i){function s(e){try{c(r.next(e))}catch(e){i(e)}}function a(e){try{c(r.throw(e))}catch(e){i(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof o?n:new o((function(e){e(n)}))).then(s,a)}c((r=r.apply(t,n||[])).next())}));var t,n,o,r}}O.maps=z,O.dataManager=_,O.playerOverworld=C,O.playerPlatformer=T,O.spawns=D,O.camera=E,O.gameState=!1,O.scene=[k];var F=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{c(o.next(e))}catch(e){i(e)}}function a(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))};class M{static play(e,t,n,o,r){let i=n||1,s=o||0,a=r||0;M.cached.push(t),M.cached.filter((n=>{M.sound=e.sound.add(t),M.sound.setLoop(s).setVolume(i).setDetune(a),n.toString()===t&&M.cached.splice(M.cached.indexOf(t),1),M.sound.play()}))}static stop(e,t){for(let n of t.sound.sounds)n.key==e&&n.stop()}static getStageTheme(e){return F(this,void 0,void 0,(function*(){return""}))}}M.noAudio=!1,M.default=!1,M.sound=null,M.cached=[],M.music={track:"",fadeIn:(e,t,n)=>{for(let e of n.sound.sounds)e.key===M.music.track&&n.tweens.add({targets:e,volume:{value:0,ease:"Power1",duration:500}});let o=n.sound.add(e).setLoop(!0).setVolume(0);n.tweens.add({targets:o,volume:{value:t,ease:"Power1",duration:3e3},onStart:()=>o.play()})},fadeOut:(e,t,n)=>{for(let o of n.sound.sounds)o.key===e&&n.tweens.add({targets:o,volume:{value:0,ease:"Power1",duration:3e3},onComplete:()=>{M.music.play(n),n.tweens.add({targets:o,volume:{value:t,ease:"Power1",duration:3e3}}),o.stop(),n.sound.removeByKey(o)}})},play:e=>F(void 0,void 0,void 0,(function*(){const t=yield M.getStageTheme(e.data.currentStage);M.music.track=t,e.sound.add(t).setLoop(!0).setVolume(.8).play()}))};var R=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{c(o.next(e))}catch(e){i(e)}}function a(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))};class j{static xhr(e,t,n){return R(this,void 0,void 0,(function*(){const o=(j.proxyConnection?j.proxyConnection:window.fetch_electron?"http://localhost:8080/":"/")+e,r=yield j.request(t,n),i=window.cordova_xhr&&"function"==typeof window.cordova_xhr,s=window.fetch_electron&&"function"==typeof window.fetch_electron,a={method:r.method,headers:r.headers,body:i||s?r.body:JSON.stringify(r.body)};if(i)return window.cordova_xhr(o,a);if(s)return window.fetch_electron(o,a);const c=yield fetch(o,a);return yield c.json()}))}static request(e,t){return R(this,void 0,void 0,(function*(){switch(j.headers={Accept:"application/json","Content-Type":"application/json","Access-Control-Allow-Origin":"*",Authorization:"Bearer "+localStorage.getItem("webtoken")},e){case"GET":j.method="GET";break;case"POST":j.method="POST";break;case"PUT":j.method="PUT"}const n={method:j.method,headers:j.headers};return"POST"===e||"PUT"===e?n.body=t:delete n.body,n}))}}j.proxyConnection=g.Config.internet.proxy?"https://pastaboss.onrender.com/":null;class I{constructor(e){this.ee=e.events,this.joystick={A:{self:null}},this.pauseMenu={isPaused:!1,cursorPos:0},this.currentInput={type:null},this.states={left:!1,right:!1,up:!1,down:!1,A:!1,B:!1,C:!1,D:!1,enter:!1,start:!1,select:!1},this.buttons={A:null,B:null,C:null,D:null,left:null,up:null,right:null,down:null,select:null,start:null,arrows:{up:null,down:null,left:null,right:null}},this.actionInputs=["A","B","C","D"],this.directionalInputs=["left","right","up","down"],this.optionInputs=["start","select"],this.refresh={default:()=>{for(let[e,t]of Object.entries(this.currentInput))t=!1}}}get state(){for(let[e,t]of Object.entries(this.states))if(!0===t)return e}_applyButton(e){if(this.actionInputs.includes(e))for(let e in this.directionalInputs)this.states[this.directionalInputs[e]]=!1;switch(e){case"start":this.states.start=!0;break;case"select":this.states.select=!0;break;case"enter":this.states.enter=!0;break;case"left":this.states.left=!0;break;case"right":this.states.right=!0;break;case"up":this.states.up=!0;break;case"down":this.states.down=!0;break;case"A":this.states.A=!0}(this.states.A||this.states.B||this.states.C||this.states.D)&&this.directionalInputs.includes(e)&&(this.states[e]=!1)}_releaseButton(e){(this.directionalInputs.includes(e)||this.actionInputs.includes(e)||this.optionInputs.includes(e))&&(this.states[e]=!1);for(let[e,t]of Object.entries(this.currentInput))t=!1}virtualControls(e){const t=e.plugins.get("rexvirtualjoystickplugin");e.input.addPointer(1),this.joystick.A.base=e.add.circle(100,450,50,0).setAlpha(.5),this.joystick.A.thumb=e.add.circle(100,450,30,13421772).setAlpha(.5),this.joystick.A.self=t.add(e,{forceX:0,forceY:0,x:100,y:450,radius:60,base:this.joystick.A.base,thumb:this.joystick.A.thumb}),this.buttons.A=e.add.circle(e.scale.width-80,500,20,0).setAlpha(.5).setInteractive().on("pointerdown",(()=>this.states.A=!0)).on("pointerup",(()=>this.states.A=!1)).on("pointerout",(()=>this.states.A=!1)),this.buttons.B=e.add.circle(e.scale.width-100,550,20,0).setAlpha(.5).setInteractive(),e.events.on("update",(()=>{e.scene.settings.active&&null!==this.joystick.A.self&&(this.joystick.A.self.forceX<-40&&(this.states.left=!0),this.joystick.A.self.forceX>40&&(this.states.right=!0),this.joystick.A.self.forceY<-40&&(this.states.up=!0),this.joystick.A.self.forceY>40&&(this.states.down=!0),0===this.joystick.A.self.forceX&&0===this.joystick.A.self.forceY&&(this._releaseButton("left"),this._releaseButton("right"),this._releaseButton("up"),this._releaseButton("down")))}))}keyboardControls(e){e.input.keyboard.clearCaptures().on("keydown-SPACE",(()=>this._applyButton("A")),!1).on("keyup-SPACE",(()=>this._releaseButton("A")),!1).on("keydown-SHIFT",(()=>this._applyButton("select")),!1).on("keyup-SHIFT",(()=>this._releaseButton("select")),!1).on("keydown-UP",(()=>this._applyButton("up")),!1).on("keyup-UP",(()=>this._releaseButton("up")),!1).on("keydown-DOWN",(()=>this._applyButton("down")),!1).on("keyup-DOWN",(()=>this._releaseButton("down")),!1).on("keydown-LEFT",(()=>this._applyButton("left")),!1).on("keyup-LEFT",(()=>this._releaseButton("left")),!1).on("keydown-RIGHT",(()=>this._applyButton("right")),!1).on("keyup-RIGHT",(()=>this._releaseButton("right")),!1).on("keydown-S",(()=>this._applyButton("A")),!1).on("keyup-S",(()=>this._releaseButton("A")),!1).on("keydown-D",(()=>this._applyButton("B")),!1).on("keyup-D",(()=>this._releaseButton("B")),!1).on("keydown-W",(()=>this._applyButton("C")),!1).on("keyup-W",(()=>this._releaseButton("C")),!1).on("keydown-A",(()=>this._applyButton("D")),!1).on("keyup-A",(()=>this._releaseButton("D")),!1).on("keydown-ENTER",(()=>this._applyButton("enter")),!1)}gamepadControls(e){e.input.gamepad.on("down",((e,t,n)=>{!0===g.Process.app.game.gameState&&(9===t.index&&this._applyButton("start"),8===t.index&&this._applyButton("select"),e.left&&this._applyButton("left"),e.right&&this._applyButton("right"),(e.up||e.L2)&&this._applyButton("up"),(e.down||e.L1)&&this._applyButton("down"),"A"===g.Process.app.input.mode?((e.A||e.R1)&&this._applyButton("A"),(e.B||e.R2)&&this._applyButton("B"),e.Y&&this._applyButton("C"),e.X&&this._applyButton("D")):((e.B||e.R1)&&this._applyButton("A"),(e.A||e.R2)&&this._applyButton("B"),e.X&&this._applyButton("C"),e.Y&&this._applyButton("D")))})).on("up",((e,t,n)=>{this._releaseButton("start"),this._releaseButton("select"),this._releaseButton("left"),this._releaseButton("right"),this._releaseButton("up"),this._releaseButton("down"),this._releaseButton("A"),this._releaseButton("B"),this._releaseButton("C"),this._releaseButton("D")}))}}var L=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{c(o.next(e))}catch(e){i(e)}}function a(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))};class K{static triggerPaywall(e,t){var n;!0!==g.Process.app.account.paid&&g.Config.internet.connected?e.scene.run("Modal",[e,"generic","paywall"]):null===(n=K.ee)||void 0===n||n.emit("game",t)}static socketInit(){return L(this,void 0,void 0,(function*(){return!1}))}static socketEmit(e,t){null!==K.socket&&K.socket.emit(e,t)}static socketClose(){null!==K.socket&&(K.socket.disconnect(),K.socket=null)}static socketErrorHandler(e){return console.log("socket error: ",e),!1}static returnToGame(e,t,n,o,r){e.sound.stopAll(),e.sound.removeAll(),e.data.spawnPoint=n,e.data.currentStage=o,t.scene.run("Quest",e.data),K.scene.scene.stop("Modal"),K.scene.scene.stop("Background"),K.scene.scene.stop("Menu3D"),K.scene.scene.stop("PauseMenu"),t.scene.stop(r)}static quitGame(){var e;null!==K.socket&&K.socketClose(),g.Process.app.game.gameState=!1,null===(e=K.ee)||void 0===e||e.emit("exit")}static enterBuilding(e,t,n,o,r){}static init(e){K.ee=e.events,K.ee.on("exit",(()=>L(this,void 0,void 0,(function*(){g.Process.app.clock.stopTimer(),K.stopCommon();const e=yield g.Process.app.refreshApp();K.scene.scene.run("Intro",e),K.scene.scene.stop("PauseMenu"),K.scene.scene.stop("Menu3D")})))).on("pause",(e=>{!0===e&&(g.Process.app.gfx.setAlpha(.8),K.scene.scene.run("PauseMenu",K.scene),K.scene.scene.stop("SamplerUI"),K.scene.scene.stop("BassUI"),K.scene.scene.stop("SaveMenu"),K.scene.scene.pause("Quest"),K.scene.scene.pause("SeaShell_MiniGame"),K.scene.scene.pause("Bubble_MiniGame"))})).on("resume",(()=>{K.scene.scene.get("Controller")._inputs.pauseMenu.isPaused=!1,g.Process.app.gfx.setAlpha(0),K.scene.scene.resume("Quest"),K.scene.scene.resume("SeaShell_MiniGame"),K.scene.scene.resume("Bubble_MiniGame"),K.scene.scene.launch("TextUI"),K.scene.scene.stop("PauseMenu"),K.scene.scene.stop("WarpMenu")})).on("controller",(()=>{K.scene.scene.run("Controller",[K.scene,K.scene.data.player.self]),K.scene.scene.stop("BassUI"),K.scene.scene.stop("SamplerUI")})).on("bass",(()=>{K.scene.scene.launch("BassUI",K.scene),K.scene.scene.pause("Controller"),K.scene.scene.setVisible(!1,"Controller")})).on("sampler",(()=>{K.scene.scene.launch("SamplerUI",K.scene),K.scene.scene.pause("Controller"),K.scene.scene.setVisible(!1,"Controller")})).on("retry",(()=>{K.stopCommon(),K.scene.scene.run("Background",{type:"blank"}),K.scene.scene.start("GameOver")})).on("credits",(()=>{K.scene.scene.launch("Credits"),K.scene.scene.stop("Controller"),K.scene.scene.stop("HUD"),K.scene.scene.stop("Quest")}))}static stopCommon(){g.Process.app.game.gameState=!1,K.scene.sound.stopAll(),K.scene.sound.removeAll(),K.scene.scene.stop("SeaShell_MiniGame"),K.scene.scene.stop("Bubble_MiniGame"),K.scene.scene.stop("Racing_MiniGame"),K.scene.scene.stop("Quest"),K.scene.scene.stop("Brawl"),K.scene.scene.stop("DeathMatch"),K.scene.scene.stop("JamSesh"),K.scene.scene.stop("HUD"),K.scene.scene.stop("Modal"),K.scene.scene.stop("Controller"),K.scene.scene.stop("Background"),K.scene.scene.stop("TextUI"),K.scene.scene.stop("Racing_MiniGame"),K.scene.scene.stop("Chat"),K.scene.scene.stop("Credits"),K.scene.scene.stop("GameOver")}}let N;K.ee=null,K.socket=null;class G extends Phaser.Renderer.WebGL.Pipelines.PostFXPipeline{constructor(e){N="\n        #define SHADER_NAME HUE_ROTATE_FS\n    \n        precision mediump float;\n    \n        uniform sampler2D uMainSampler;\n        uniform float uTime;\n        uniform float uSpeed;\n    \n        varying vec2 outTexCoord;\n    \n        void main()\n        {\n            float c = cos(uTime * uSpeed);\n            float s = sin(uTime * uSpeed);\n    \n            mat4 r = mat4(0.299, 0.587, 0.114, 0.0, 0.299, 0.587, 0.114, 0.0, 0.299, 0.587, 0.114, 0.0, 0.0,  0.0, 0.0, 1.0);\n            mat4 g = mat4(0.701, -0.587, -0.114, 0.0, -0.299, 0.413, -0.114, 0.0, -0.300, -0.588, 0.886, 0.0, 0.0, 0.0, 0.0, 0.0);\n            mat4 b = mat4(0.168, 0.330, -0.497, 0.0, -0.328, 0.035, 0.292, 0.0, 1.250, -1.050, -0.203, 0.0, 0.0, 0.0, 0.0, 0.0);\n    \n            mat4 hueRotation = r + g * c + b * s;\n    \n            gl_FragColor = texture2D(uMainSampler, outTexCoord) * hueRotation;\n        }\n        ",super({game:e,name:"HueRotatePostFX",fragShader:N,uniforms:["uMainSampler","uTime","uSpeed"]}),this.speed=1}onPreRender(){this.setTime("uTime"),this.set1f("uSpeed",this.speed)}}class U extends Phaser.Renderer.WebGL.Pipelines.PostFXPipeline{constructor(e){N="\n            #define SHADER_NAME PLASMA_2_FS\n            \n            precision mediump float;\n            \n            uniform float     uTime;\n            uniform vec2      uResolution;\n            uniform sampler2D uMainSampler;\n            varying vec2 outTexCoord;\n            \n            #define MAX_ITER 4\n            \n            void main( void )\n            {\n                vec2 v_texCoord = gl_FragCoord.xy / uResolution; \n            \n                vec2 p =  v_texCoord * 8.0 - vec2(20.0);\n                vec2 i = p;\n                float c = 1.0;\n                float inten = .05;\n            \n                for (int n = 0; n < MAX_ITER; n++)\n                {\n                    float t = uTime * (1.0 - (3.0 / float(n+1)));\n            \n                    i = p + vec2(cos(t - i.x) + sin(t + i.y),\n                    sin(t - i.y) + cos(t + i.x));\n            \n                    c += 1.0/length(vec2(p.x / (sin(i.x+t)/inten),\n                    p.y / (cos(i.y+t)/inten)));\n                }\n            \n                c /= float(MAX_ITER);\n                c = 1.5 - sqrt(c);\n            \n                vec4 texColor = vec4(0.0, 0.01, 0.015, 1.0);\n            \n                texColor.rgb *= (1.0 / (1.0 - (c + 0.05)));\n                vec4 pixel = texture2D(uMainSampler, outTexCoord);\n            \n                gl_FragColor = pixel + texColor;\n            }\n            ",super({game:e,renderTarget:!0,fragShader:N,uniforms:["uProjectionMatrix","uMainSampler","uTime","uResolution"]})}onBoot(){this.set2f("uResolution",this.renderer.width,this.renderer.height)}onPreRender(){this.set1f("uTime",this.game.loop.time/1e3)}}class V extends Phaser.Renderer.WebGL.Pipelines.MultiPipeline{constructor(e){N="\n        \n        precision mediump float;\n\n        uniform sampler2D uMainSampler[%count%];\n        uniform vec2 uResolution;\n        uniform float uTime;\n\n        varying vec2 outTexCoord;\n        varying float outTexId;\n        varying vec4 outTint;\n\n        vec4 plasma()\n        {\n            vec2 pixelPos = gl_FragCoord.xy / uResolution * 20.0;\n            float freq = 0.8;\n            float value =\n                sin(uTime + pixelPos.x * freq) +\n                sin(uTime + pixelPos.y * freq) +\n                sin(uTime + (pixelPos.x + pixelPos.y) * freq) +\n                cos(uTime + sqrt(length(pixelPos - 0.5)) * freq * 2.0);\n\n            return vec4(\n                cos(value),\n                sin(value),\n                sin(value * 3.14 * 4.0),\n                cos(value)\n            );\n        }\n\n        void main()\n        {\n            vec4 texture;\n\n            %forloop%\n\n            texture *= vec4(outTint.rgb * outTint.a, outTint.a);\n\n            gl_FragColor = texture * plasma();\n        }",super({game:e,fragShader:N,uniforms:["uProjectionMatrix","uViewMatrix","uModelMatrix","uMainSampler","uResolution","uTime"]})}onBoot(){this.set2f("uResolution",this.renderer.width,this.renderer.height)}onPreRender(){this.set1f("uTime",this.game.loop.time/2e3)}}class q{static init(e){e.renderer.pipelines.add("Hue",new q.post.multi(g.Process.game)).set2f("uResolution",g.Process.game.config.width,g.Process.game.config.height)}static toggleWaterRenderer(e,t){!0===t?e.cameras.main.setPostPipeline(q.post.plasma):e.cameras.main.resetPostPipeline()}}q.materials={},q.postProcessing=!1,q.shader={three_std_Vert:" \n            varying vec2 vUv;\n\n            void main() \n            {\n                vUv = uv;\n                gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n            }\n        ",three_std_Frag:"\n            varying vec2 vUv;\n\n            void main()\n            {\n                gl_FragColor = vec4(vec3(vUv, 0.0), 1.0);\n            }\n        ",pnoise_Vert:"\n\n\n            vec3 mod289(vec3 x){ \n                return x - floor(x * (1.0 / 289.0)) * 289.0;\n            } \n            vec4 mod289(vec4 x){ \n                return x - floor(x * (1.0 / 289.0)) * 289.0;\n            } \n            vec4 permute(vec4 x){ \n                return mod289(((x*34.0)+10.0)*x);\n            } \n            vec4 taylorInvSqrt(vec4 r){ \n                return 1.79284291400159 - 0.85373472095314 * r;\n            } \n            vec3 fade(vec3 t) { \n                return t*t*t*(t*(t*6.0-15.0)+10.0);\n            } \n            \n            float cnoise(vec3 P)\n            { \n                vec3 Pi0 = floor(P); \n                vec3 Pi1 = Pi0 + vec3(1.0); \n                Pi0 = mod289(Pi0); \n                Pi1 = mod289(Pi1); \n                vec3 Pf0 = fract(P); \n                vec3 Pf1 = Pf0 - vec3(1.0); \n                vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x); \n                vec4 iy = vec4(Pi0.yy, Pi1.yy); \n                vec4 iz0 = Pi0.zzzz; \n                vec4 iz1 = Pi1.zzzz; \n                vec4 ixy = permute(permute(ix) + iy); \n                vec4 ixy0 = permute(ixy + iz0); \n                vec4 ixy1 = permute(ixy + iz1); \n                vec4 gx0 = ixy0 * (1.0 / 7.0); \n                vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5; \n                gx0 = fract(gx0); \n                vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0); \n                vec4 sz0 = step(gz0, vec4(0.0)); \n                gx0 -= sz0 * (step(0.0, gx0) - 0.5); \n                gy0 -= sz0 * (step(0.0, gy0) - 0.5); \n                vec4 gx1 = ixy1 * (1.0 / 7.0); \n                vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5; \n                gx1 = fract(gx1); \n                vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1); \n                vec4 sz1 = step(gz1, vec4(0.0)); \n                gx1 -= sz1 * (step(0.0, gx1) - 0.5); \n                gy1 -= sz1 * (step(0.0, gy1) - 0.5); \n                vec3 g000 = vec3(gx0.x,gy0.x,gz0.x); \n                vec3 g100 = vec3(gx0.y,gy0.y,gz0.y); \n                vec3 g010 = vec3(gx0.z,gy0.z,gz0.z); \n                vec3 g110 = vec3(gx0.w,gy0.w,gz0.w); \n                vec3 g001 = vec3(gx1.x,gy1.x,gz1.x); \n                vec3 g101 = vec3(gx1.y,gy1.y,gz1.y); \n                vec3 g011 = vec3(gx1.z,gy1.z,gz1.z); \n                vec3 g111 = vec3(gx1.w,gy1.w,gz1.w); \n                vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110))); \n                \n                g000 *= norm0.x; g010 *= norm0.y;\n                g100 *= norm0.z; \n                g110 *= norm0.w; \n                vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111))); \n                g001 *= norm1.x; \n                g011 *= norm1.y; \n                g101 *= norm1.z; \n                g111 *= norm1.w; \n            \n                float n000 = dot(g000, Pf0); \n                float n100 = dot(g100, vec3(Pf1.x, Pf0.yz)); \n                float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z)); \n                float n110 = dot(g110, vec3(Pf1.xy, Pf0.z)); \n                float n001 = dot(g001, vec3(Pf0.xy, Pf1.z)); \n                float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z)); \n                float n011 = dot(g011, vec3(Pf0.x, Pf1.yz)); \n                float n111 = dot(g111, Pf1); \n                vec3 fade_xyz = fade(Pf0); \n                vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z); \n                vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y); \n                float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n            \n                return 2.2 * n_xyz;\n            } \n            \n            float pnoise(vec3 P, vec3 rep)\n            { \n                vec3 Pi0 = mod(floor(P), rep); \n                vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); \n                Pi0 = mod289(Pi0); \n                Pi1 = mod289(Pi1); \n                vec3 Pf0 = fract(P); \n                vec3 Pf1 = Pf0 - vec3(1.0);\n                vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x); \n                vec4 iy = vec4(Pi0.yy, Pi1.yy); \n                vec4 iz0 = Pi0.zzzz; \n                vec4 iz1 = Pi1.zzzz; \n                vec4 ixy = permute(permute(ix) + iy); \n                vec4 ixy0 = permute(ixy + iz0); \n                vec4 ixy1 = permute(ixy + iz1); \n                vec4 gx0 = ixy0 * (1.0 / 7.0); \n                vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5; \n                gx0 = fract(gx0); \n                vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0); \n                vec4 sz0 = step(gz0, vec4(0.0)); \n                gx0 -= sz0 * (step(0.0, gx0) - 0.5); \n                gy0 -= sz0 * (step(0.0, gy0) - 0.5); \n                vec4 gx1 = ixy1 * (1.0 / 7.0); \n                vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5; \n                gx1 = fract(gx1); \n                vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1); \n                vec4 sz1 = step(gz1, vec4(0.0)); \n                gx1 -= sz1 * (step(0.0, gx1) - 0.5); \n                gy1 -= sz1 * (step(0.0, gy1) - 0.5); \n                vec3 g000 = vec3(gx0.x,gy0.x,gz0.x); \n                vec3 g100 = vec3(gx0.y,gy0.y,gz0.y); \n                vec3 g010 = vec3(gx0.z,gy0.z,gz0.z); \n                vec3 g110 = vec3(gx0.w,gy0.w,gz0.w); \n                vec3 g001 = vec3(gx1.x,gy1.x,gz1.x); \n                vec3 g101 = vec3(gx1.y,gy1.y,gz1.y); \n                vec3 g011 = vec3(gx1.z,gy1.z,gz1.z); \n                vec3 g111 = vec3(gx1.w,gy1.w,gz1.w); \n                vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110))); \n                g000 *= norm0.x; \n                g010 *= norm0.y; \n                g100 *= norm0.z; \n                g110 *= norm0.w; \n                vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111))); \n                g001 *= norm1.x; \n                g011 *= norm1.y; \n                g101 *= norm1.z; \n                g111 *= norm1.w; \n                float n000 = dot(g000, Pf0); \n                float n100 = dot(g100, vec3(Pf1.x, Pf0.yz)); \n                float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z)); \n                float n110 = dot(g110, vec3(Pf1.xy, Pf0.z)); \n                float n001 = dot(g001, vec3(Pf0.xy, Pf1.z)); \n                float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z)); \n                float n011 = dot(g011, vec3(Pf0.x, Pf1.yz)); \n                float n111 = dot(g111, Pf1); \n                vec3 fade_xyz = fade(Pf0); \n                vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z); \n                vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y); \n                float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n                return 2.2 * n_xyz;\n            }\n        \n    \n            varying vec2 vUv;\n            varying float noise;\n            uniform float time;\n\n            float turbulence (vec3 p)\n            {\n                float w = 100.0;\n                float t = -.5;\n                \n                for (float f = 1.0; f <= 10.0; f++)\n                {\n                    float power = pow(2.0, f);\n                    t += abs (pnoise(vec3(power * p), vec3 (10.0, 10.0, 10.0)) / power);\n\n                }\n                return t;\n                \n            }\n\n            void main()\n            {\n                vUv = uv;\n                noise = 10.0 * -.10 * turbulence(.5 * normal + time);\n                float b = 5.0 * pnoise(0.05 * position + vec3(2.0 * time), vec3(100.0));\n                float displacement = - noise + b;\n\n                vec3 newPosition = position + normal * displacement;\n                gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n            }\n        ",muzzleFlash_Frag:"\n\n            varying vec2 vUv;\n            uniform sampler2D tExplosion;\n            uniform float alpha;\n\n            float random(vec3 scale, float seed)\n            {\n                return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n            }\n\n            void main()\n            {\n                float r = .01 * random(vec3(12.9898, 78.233, 151.7182), 0.0);\n                vec4 color = texture2D(tExplosion, vUv + r) * alpha;\n                gl_FragColor = vec4(color.rgba);\n            }\n        ",three_bloom_Frag:"\n\n            uniform sampler2D baseTexture;\n            uniform sampler2D bloomTexture;\n\n            varying vec2 vUv;\n\n            void main()\n            {\n                gl_FragColor = ( texture2D(baseTexture, vUv) + vec4(1.0) * texture2D(bloomTexture, vUv));\n            }\n        ",vert3DVary:"\n\n            uniform float pointMultiplier;\n\n            uniform float angle;\n            uniform vec4 colour;\n\n            varying vec4 vColour;\n            varying vec2 vAngle;\n\n            void main() \n            {\n                vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\n                vAngle = vec2(cos(angle), sin(angle));\n                vColour = colour;\n\n                gl_Position = projectionMatrix * mvPosition;\n                gl_PointSize = 1.0 * pointMultiplier / gl_Position.w;\n            \n            }",particle3D:"\n\n            uniform sampler2D diffuseTexture;\n            uniform float alpha;\n\n            varying vec4 vColour;\n            varying vec2 vAngle;\n\n            void main()\n            {\n                vec2 coords = (gl_PointCoord - 0.5) * mat2(vAngle.x, vAngle.y, -vAngle.y, vAngle.x) + 0.5;\n                gl_FragColor = vec4(1.0, 1.0, 1.0, alpha) * vColour;\n\n            }",wave:"\n            #ifdef GL_ES\n            precision mediump float;\n            #endif\n\n            uniform float time;\n            uniform vec2 resolution;\n\n            void main( void ) {\n                vec2 pos1=gl_FragCoord.xy/resolution.x-vec2(0.35,resolution.y/resolution.x/2.0);\n                float l1=length(pos1);\n                float l2=step(0.5,fract(1.0/l1+time/1.0));\n                float a=step(0.2,fract(0.1*sin(15.*l1+time*1.)/l1+atan(pos1.x,pos1.y)*2.));\n                if(a!=l2 && l1>0.02){\n                    gl_FragColor=vec4(1.0,1.0,1.0,1.0);\n                }\n            }\n        ",fragmentShader:"\n            precision mediump float;\n\n            uniform float time;\n            uniform vec2 resolution;\n            uniform vec2 mouse;\n\n            varying vec2 fragCoord;\n\n            void main (void)\n            {\n                // Normalized pixel coordinates (from 0 to 1)\n                vec2 uv = fragCoord / resolution.xy;\n\n                // Time varying pixel color\n                // vec3 col = cos(uv.xyx + vec3(0, 2, 4));\n                vec3 col = uv.xyx;\n\n                gl_FragColor = vec4(col, 1.0);\n            }\n        ",fragmentShader2:"\n            precision mediump float;\n\n            uniform float time;\n            uniform vec2 resolution;\n            uniform vec2 mouse;\n\n            varying vec2 fragCoord;\n\n            vec3 hsv2rgb (vec3 c)\n            {\n            vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n            vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n            return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n            }\n\n            void main (void)\n            {\n                vec2 gg = fragCoord.xy;\n                float bins = 10.0;\n                vec2 pos = (gg / resolution.xy);\n\n                float bin = floor(pos.x * bins);\n\n                gl_FragColor = vec4(hsv2rgb(vec3(bin / bins, 1.0, 1.0)), 1.0);\n            }\n        ",plasmaMask:"precision highp float;\n\n            uniform float time;\n            // uniform vec2 resolution;\n            \n            void main( void ) {\n            \n                vec2 resolution = vec2(800.0, 600.0);\n            \n                vec2 position = ( gl_FragCoord.xy / resolution.xy );\n            \n                float color = 0.0;\n                color += sin( position.x * cos( time / 15.0 ) * 80.0 ) + cos( position.y * cos( time / 15.0 ) * 10.0 );\n                color += sin( position.y * sin( time / 10.0 ) * 40.0 ) + cos( position.x * sin( time / 25.0 ) * 40.0 );\n                color += sin( position.x * sin( time / 5.0 ) * 10.0 ) + sin( position.y * sin( time / 35.0 ) * 80.0 );\n                color *= sin( time / 10.0 ) * 0.5;\n            \n                \n                gl_FragColor = vec4( vec3( sin( color + time / 3.0 ) * 0.75, sin( color + time / 3.0 ) * 0.75, sin( color + time / 3.0 ) * 0.75 ), 1.0 );\n            \n        }",hueTunnel:"precision mediump float;\n\n            vec2 iResolution = vec2(800.0, 600.0);\n            \n            vec2 iMouse = vec2(400.0, 300.0);\n            \n            uniform float iGlobalTime;\n            \n            vec3 hue(vec3 color, float shift) {\n            \n                const vec3  kRGBToYPrime = vec3 (0.299, 0.587, 0.114);\n                const vec3  kRGBToI     = vec3 (0.596, -0.275, -0.321);\n                const vec3  kRGBToQ     = vec3 (0.212, -0.523, 0.311);\n            \n                const vec3  kYIQToR   = vec3 (1.0, 0.956, 0.621);\n                const vec3  kYIQToG   = vec3 (1.0, -0.272, -0.647);\n                const vec3  kYIQToB   = vec3 (1.0, -1.107, 1.704);\n            \n                // Convert to YIQ\n                float   YPrime  = dot (color, kRGBToYPrime);\n                float   I      = dot (color, kRGBToI);\n                float   Q      = dot (color, kRGBToQ);\n            \n                // Calculate the hue and chroma\n                float   hue     = atan (Q, I);\n                float   chroma  = sqrt (I * I + Q * Q);\n            \n                // Make the user's adjustments\n                hue += shift;\n            \n                // Convert back to YIQ\n                Q = chroma * sin (hue);\n                I = chroma * cos (hue);\n            \n                // Convert back to RGB\n                vec3    yIQ   = vec3 (YPrime, I, Q);\n                color.r = dot (yIQ, kYIQToR);\n                color.g = dot (yIQ, kYIQToG);\n                color.b = dot (yIQ, kYIQToB);\n            \n                return color;\n            }\n            \n            float sdBox( vec3 p, vec3 b )\n            {\n            vec3 d = abs(p) - b;\n            return min(max(d.x,max(d.y,d.z)),0.0) +\n                    length(max(d,0.0));\n            }\n            \n            float sdCappedCylinder( vec3 p, vec2 h ) {\n            vec2 d = abs(vec2(length(p.xy),p.z)) - h;\n            return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n            }\n            \n            float opS( float d1, float d2 )\n            {\n                return max(-d1,d2);\n            }\n            \n            float sdOcta( vec3 p, float h, float w ){\n                p.xz = abs(p.xz);\n                p.y = abs(p.y)-h;\n                return max(p.z,p.x)+(p.y*w);    \n            }\n            \n            vec2 map( in vec3 pos )\n            {\n                pos.x += sin(pos.z+25.0+iGlobalTime)*0.2;\n                pos.y += cos(pos.z+25.0+iGlobalTime)*0.2;\n                \n                float size = .33;\n                vec3 p = abs(mod(pos.xyz+size,size*2.)-size);\n                float box = sdBox( p, vec3(.3));\n                float cyl = sdCappedCylinder( p, vec2(.31, .32));\n                \n                vec2  res = vec2(opS(cyl, box) ,1.5); \n                \n                return res;\n            }\n            \n            vec2 castRay( in vec3 ro, in vec3 rd )\n            {\n                float tmin = 0.0;\n                float tmax = 60.0;\n                \n            #if 0\n                float tp1 = (0.0-ro.y)/rd.y; if( tp1>0.0 ) tmax = min( tmax, tp1 );\n                float tp2 = (1.6-ro.y)/rd.y; if( tp2>0.0 ) { if( ro.y>1.6 ) tmin = max( tmin, tp2 );\n                                                            else           tmax = min( tmax, tp2 ); }\n            #endif\n                \n                float t = tmin;\n                float m = -1.0;\n                for( int i=0; i<60; i++ )\n                {\n            vec2 res = map( ro+rd*t );\n                    if(  t>tmax ) break;\n                    t += res.x;\n            m = res.y;\n                }\n            \n                if( t>tmax ) m=-1.0;\n                return vec2( t, m );\n            }\n            \n            vec3 calcNormal( in vec3 pos )\n            {\n            vec3 eps = vec3( 0.01, 0.0, 0.0 );\n            vec3 nor = vec3(\n            map(pos+eps.xyy).x - map(pos-eps.xyy).x,\n            map(pos+eps.yxy).x - map(pos-eps.yxy).x,\n            map(pos+eps.yyx).x - map(pos-eps.yyx).x );\n            return normalize(nor);\n            }\n            \n            float calcAO( in vec3 pos, in vec3 nor )\n            {\n            float occ = 0.0;\n                float sca = 1.0;\n                for( int i=0; i<5; i++ )\n                {\n                    float hr = 0.01 + 0.12*float(i)/4.0;\n                    vec3 aopos =  nor * hr + pos;\n                    float dd = map( aopos ).x;\n                    occ += -(dd-hr)*sca;\n                    sca *= .95;\n                }\n                return clamp( 1.0 - 3.0*occ, 0.0, 1.0 );    \n            }\n            \n               \n            vec3 render( in vec3 ro, in vec3 rd )\n            { \n                vec3 col = vec3(0.0, 0.0, 0.0);\n                vec2 res = castRay(ro,rd);\n                float t = res.x;\n                float m = res.y;\n                \n                if( m>-0.5 )\n                {\n                    vec3 pos = ro + t*rd;\n                    vec3 nor = calcNormal( pos );\n                    vec3 ref = reflect( rd, nor );\n                    \n                    // material        \n                    float occ = calcAO( pos, nor );\n                    col = hue(vec3(0.0,1.0,1.0),iGlobalTime+pos.z)*occ;\n                }\n            \n            return vec3( clamp(col,0.0,1.0) );\n            }\n            \n            mat3 setCamera( in vec3 ro, in vec3 ta, float cr )\n            {\n            vec3 cw = normalize(ta-ro);\n            vec3 cp = vec3(sin(cr), cos(cr),0.0);\n            vec3 cu = normalize( cross(cw,cp) );\n            vec3 cv = normalize( cross(cu,cw) );\n                return mat3( cu, cv, cw );\n            }\n            \n            void main()\n            {\n                mainImage();\n            }\n            \n            void mainImage( out vec4 fragColor, in vec2 fragCoord )\n            {\n                vec2 q = fragCoord.xy/iResolution.xy;\n                vec2 p = -1.0+2.0*q;\n                p.x *= iResolution.x/iResolution.y;\n                vec2 mo = iMouse.xy/iResolution.xy;\n            \n                // camera\n                vec3 ro = vec3(0., 0.,iGlobalTime );\n                \n                vec3 ta = ro+vec3( 0., 0.,1. );\n                \n                // camera-to-world transformation\n                mat3 ca = setCamera( ro, ta, 0. );\n            \n                // ray direction\n                vec3 rd = ca * normalize(vec3(p.xy,1.5));\n            \n                // render\n                vec3 col = render( ro, rd );\n            \n                fragColor=vec4( col, 1.0 );\n        }",checkers:"   precision mediump float;\n\n            uniform float time;\n            // uniform vec2 resolution;\n            \n            void main( void ) {\n                \n                vec2 resolution = vec2(800.0, 600.0);\n            \n                vec2 pos = ( gl_FragCoord.xy / resolution.xy ) - vec2(0.5,0.5); \n                    float horizon = 0.7;\n                    float fov = 0.6; \n                float scaling = 0.2;\n                float t = cos(time) / 6.0;\n                \n                mat2 rot = mat2(cos(t),sin(t),sin(t),cos(t)); // rot 2d pos ;\n                \n                pos  *=rot;\n                \n                vec3 p = vec3(pos.x, fov, pos.y - horizon);      \n                vec2 s = vec2(p.x/p.z, p.y/p.z) * scaling;\n                \n                s.xy *=rot;\n                \n                float dupa = 4.0;\n                float color = 1.0;\n            \n                if(pos.y < 1.1)\n                \n                color = sign((mod(s.x, 0.1) - 0.05) * (mod(s.y + dupa * mod(-time * 0.05, 1.0), 0.1) - 0.05));\n                color *= p.z*p.z*14.0;\n                \n                    gl_FragColor = vec4( 0.5-p.y,0.2,0.6, 1.0 );\n                \n                //fading 2 black \n            \n                vec4 c = vec4(0,0,0,1);\n                gl_FragColor = c;\n            \n                gl_FragColor += vec4( vec3(color), 1.0 );\n            \n        }",flareShader:"\n            precision mediump float;\n\n            uniform float time;\n            uniform vec2 resolution;\n            uniform vec2 mouse;\n\n            uniform vec2 fragCoord;\n\n            void main (void)\n            {\n                float intensity = 0.;\n\n                for (float i = 0.; i < 54.; i++)\n                {\n                    float angle = i/27. * 3.14159;\n                    vec2 xy = vec2(0.27 * cos(angle), 0.27 * sin(angle));\n                    xy += fragCoord.xy/resolution.y-0.5;\n                    intensity += pow(1000000., (0.77 - length(xy) * 1.9) * (1. + 0.275 * fract(-i / 27. - time))) / 80000.;\n                }\n\n                gl_FragColor = vec4(clamp(intensity * vec3(0.0777, 0.196, 0.27), vec3(0.), vec3(1.)), 0.);\n            }\n        ",reverseFire:"\n\n            #ifdef GL_ES\n            precision mediump float;\n            #endif\n\n            uniform float time;\n            uniform vec2 resolution;\n\n            float snoise(vec3 uv, float res)\n            {\n                const vec3 s = vec3(1e0, 1e2, 1e3);\n                \n                uv *= res;\n                \n                vec3 uv0 = floor(mod(uv, res))*s;\n                vec3 uv1 = floor(mod(uv+vec3(1.), res))*s;\n                \n                vec3 f = fract(uv); f = f*f*(3.0-2.0*f);\n\n                vec4 v = vec4(uv0.x+uv0.y+uv0.z, uv1.x+uv0.y+uv0.z,\n                            uv0.x+uv1.y+uv0.z, uv1.x+uv1.y+uv0.z);\n\n                vec4 r = fract(sin(v*1e-1)*1e3);\n                float r0 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n                \n                r = fract(sin((v + uv1.z - uv0.z)*1e-1)*1e3);\n                float r1 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n                \n                return mix(r0, r1, f.z)*2.-1.;\n            }\n\n            void main( void ) {\n\n                vec2 p = -.5 + gl_FragCoord.xy / resolution.xy;\n                p.x *= resolution.x/resolution.y;\n                \n                float color = (6.5*length(2.*p))-4.0;\n                \n                vec3 coord = vec3(atan(p.x,p.y), length(p)*.4, .5);\n                \n                for(int i = 1; i <= 10; i++)\n                {\n                    float power = pow(2.0, float(i));\n                    color += (2.5 / power) * snoise(coord + vec3(0.,-time*.08, time*.01), power*16.);\n                }\n                gl_FragColor = vec4( color, pow(max(color,0.),1.)*0.4, pow(max(color,0.),2.)*0.15 , color);\n            }   \n        ",fireShader:"\n            #ifdef GL_ES\n            precision mediump float;\n            #endif\n\n            uniform float time;\n            uniform vec2 resolution;\n\n            float snoise(vec3 uv, float res)\n            {\n                const vec3 s = vec3(1e0, 1e2, 1e3);\n                \n                uv *= res;\n                \n                vec3 uv0 = floor(mod(uv, res))*s;\n                vec3 uv1 = floor(mod(uv+vec3(1.), res))*s;\n                \n                vec3 f = fract(uv); f = f*f*(3.0-2.0*f);\n\n                vec4 v = vec4(uv0.x+uv0.y+uv0.z, uv1.x+uv0.y+uv0.z,\n                            uv0.x+uv1.y+uv0.z, uv1.x+uv1.y+uv0.z);\n\n                vec4 r = fract(sin(v*1e-1)*1e3);\n                float r0 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n                \n                r = fract(sin((v + uv1.z - uv0.z)*1e-1)*1e3);\n                float r1 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n                \n                return mix(r0, r1, f.z)*2.-1.;\n            }\n\n            void main( void ) {\n\n                vec2 p = -.5 + gl_FragCoord.xy / resolution.xy;\n                p.x *= resolution.x/resolution.y;\n                \n                float color = 2.0 - (3.*length(2.*p));\n                \n                vec3 coord = vec3(atan(p.x,p.y)/6.2832+.5, length(p)*.4, .5);\n                \n                for(int i = 1; i <= 10; i++)\n                {\n                    float power = pow(2.0, float(i));\n                    color += (2.5 / power) * snoise(coord + vec3(0.,-time*.08, time*.01), power*16.);\n                }\n                gl_FragColor = vec4( color, pow(max(color,0.),1.)*0.4, pow(max(color,0.),2.)*0.15 , color);\n            }\n        ",disco:"\n            precision mediump float;\n\n            uniform float time;\n            uniform vec2 resolution;\n            uniform vec2 mouse;\n\n            varying vec2 fragCoord;\n\n            void main (void)\n            {\n                float ss = 0.1;\n                vec2 gg = fragCoord.xy;\n                gg = ceil(gg / ss) * ss;\n\n                vec2 uv =  (gg -.5 * resolution.xy) / resolution.y ;\n\n                if (ss<0.0)\n                    uv = abs(uv);\n\n                float t = time * .1;\n\n                vec3 ro = vec3(0, 0, -1);\n                    vec3 lookat = vec3(0.0);\n                    float zoom = .1 + abs( sin(t))/5.;\n\n                    vec3 f = normalize(lookat-ro),\n                    r = normalize(cross(vec3(0,1,0), f)),\n                    u = cross(r, f),\n                    c = ro + f * zoom,\n                    i = c + uv.x * r + uv.y * u,\n                    rd = normalize(i-ro);\n\n                    float radius = mix(.3, 1.5, .5+.5);\n\n                    float dS, dO;\n                    vec3 p;\n\n                    for(int i=0; i<2000; i++) {\n                        p = ro + rd * dO;\n                        dS = -(length(vec2(length(p.xz)-1., p.y)) - .15);\n                        if(dS<.0001) break;\n                        dO += dS;\n                }\n\n                vec3 col = vec3(0);\n                vec3 col2 = vec3(0);\n\n                if(dS<.001) {\n                    float x = atan(p.x, p.z)+t*.5;          // -pi to pi\n                    float y = atan(length(p.xz)-1., p.y);\n\n                   \n                    float ripples = sin((x*10.-y*10.)*3.)*.5+.5;\n                    float waves = sin(x*2.-y*4.+t*20.);\n                    float custom = sin(x*5.-y*9.+t*40.);\n\n                    float b1 = smoothstep(-.2, .2, custom);\n                    float b2 = smoothstep(-.2, .2, custom-.5);\n                    float b3 = smoothstep(-.5, .3, custom);\n\n                    float m = b1*(1.-b2);\n                    m = max(m, ripples*b2*max(0., waves));\n                    m += max(0., waves*.3*b2);\n\n                    float z = b1*(1.-b2);\n                    z = max(m, ripples*b2*max(0., custom));\n                    z += max(0., custom*.3*b2);\n\n                    col += m;\n                    col.rb *= 2.5;\n                    col.z *= 2.5*abs(cos(t));\n\n                    col2 += m;\n                    col2.rb *= 5.5;\n                    col2.z *= 5.2*abs(cos(t));\n                }\n\n                gl_FragColor = vec4( col2, 0.5 );\n            }\n        ",disco2:"\n        precision mediump float;\n\n        uniform float time;\n        uniform vec2 resolution;\n        uniform vec2 mouse;\n\n        varying vec2 fragCoord;\n\n        void main (void)\n        {\n            float ss = 0.1;\n            vec2 gg = fragCoord.xy;\n            gg = ceil(gg / ss) * ss;\n\n            vec2 uv =  (gg -.5 * resolution.xy) / resolution.y ;\n\n            if (ss<0.0)\n                uv = abs(uv);\n\n            float t = time * .2;\n\n            vec3 ro = vec3(0, 0, -1);\n                vec3 lookat = vec3(0.0);\n                float zoom = .1 + abs( sin(t))/5.;\n\n                vec3 f = normalize(lookat-ro),\n                r = normalize(cross(vec3(0,1,0), f)),\n                u = cross(f, r),\n                c = ro + f * zoom,\n                i = c + uv.x * r + uv.y * u,\n                rd = normalize(i-ro);\n\n                float radius = mix(.3, 1.5, .5+.5);\n\n                float dS, dO;\n                vec3 p;\n\n                for(int i=0; i<1000; i++) {\n                    p = ro + rd * dO;\n                    dS = -(length(vec2(length(p.xz)-1., p.y)) - .15);\n                    if(dS<.0001) break;\n                    dO += dS;\n            }\n\n            vec3 col = vec3(0);\n\n            if(dS<.001) {\n                float x = atan(p.x, p.z)+t*.5;          // -pi to pi\n                float y = atan(length(p.xz)-1., p.y);\n\n                float bands = sin(y*10.+x*30.);\n                float ripples = sin((x*10.-y*30.)*3.)*.5+.5;\n                float waves = sin(x*2.-y*6.+t*20.);\n\n                float b1 = smoothstep(-.2, .2, bands);\n                float b2 = smoothstep(-.2, .2, bands-.5);\n\n                float m = b1*(1.-b2);\n                m = max(m, ripples*b2*max(0., waves));\n                m += max(0., waves*.3*b2);\n\n                col += m;\n            col.rb *= 2.5;\n            col.z *= 2.5*abs(cos(t));\n            }\n\n            gl_FragColor = vec4( col, 0.5 );\n        }\n\n        ",fragmentShader5:"\n            precision mediump float;\n\n            uniform float time;\n\n            varying vec2 fragCoord;\n\n            void main() {\n\n                vec2 p = - 1.0 + 2.0 * fragCoord;\n                float a = time * 40.0;\n                float d, e, f, g = 1.0 / 40.0 ,h ,i ,r ,q;\n\n                e = 400.0 * ( p.x * 0.5 + 0.5 );\n                f = 400.0 * ( p.y * 0.5 + 0.5 );\n                i = 200.0 + sin( e * g + a / 150.0 ) * 20.0;\n                d = 200.0 + cos( f * g / 2.0 ) * 18.0 + cos( e * g ) * 7.0;\n                r = sqrt( pow( abs( i - e ), 2.0 ) + pow( abs( d - f ), 2.0 ) );\n                q = f / r;\n                e = ( r * cos( q ) ) - a / 2.0;\n                f = ( r * sin( q ) ) - a / 2.0;\n                d = sin( e * g ) * 176.0 + sin( e * g ) * 164.0 + r;\n                h = ( ( f + d ) + a / 2.0 ) * g;\n                i = cos( h + r * p.x / 1.3 ) * ( e + e + a ) + cos( q * g * 6.0 ) * ( r + h / 3.0 );\n                h = sin( f * g ) * 144.0 - sin( e * g ) * 212.0 * p.x;\n                h = ( h + ( f - e ) * q + sin( r - ( a + h ) / 7.0 ) * 10.0 + i / 4.0 ) * g;\n                i += cos( h * 2.3 * sin( a / 350.0 - q ) ) * 184.0 * sin( q - ( r * 4.3 + a / 12.0 ) * g ) + tan( r * g + h ) * 184.0 * cos( r * g + h );\n                i = mod( i / 5.6, 256.0 ) / 64.0;\n                if ( i < 0.0 ) i += 4.0;\n                if ( i >= 2.0 ) i = 4.0 - i;\n                d = r / 350.0;\n                d += sin( d * d * 8.0 ) * 0.52;\n                f = ( sin( a * g ) + 1.0 ) / 2.0;\n                gl_FragColor = vec4( vec3( f * i / 1.6, i / 2.0 + d / 13.0, i ) * d * p.x + vec3( i / 1.3 + d / 8.0, i / 2.0 + d / 18.0, i ) * d * ( 1.0 - p.x ), 1.0 );\n            }\n        ",warpShader:"\n            precision mediump float;\n\n            uniform float time;\n            uniform vec2 resolution;\n            uniform vec2 mouse;\n\n            varying vec2 fragCoord;\n\n            void main() {\n\n                vec2 position = ( fragCoord.xy / resolution.xy ) + mouse / 4.0;\n\n                float color = 0.0;\n                color += sin( position.x * cos( time / 15.0 ) * 80.0 ) + cos( position.y * cos( time / 15.0 ) * 10.0 );\n                color += sin( position.y * sin( time / 10.0 ) * 40.0 ) + cos( position.x * sin( time / 25.0 ) * 40.0 );\n                color += sin( position.x * sin( time / 5.0 ) * 10.0 ) + sin( position.y * sin( time / 35.0 ) * 80.0 );\n                color *= sin( time / 1.0 ) * 0.5;\n\n                gl_FragColor = vec4( vec3( color, color * 0.5, sin( color + time / 3.0 ) * 0.75 ), 1.0 );\n\n            }\n        ",fragVortex:"\n            #ifdef GL_ES\n            precision mediump float;\n            #endif\n\n\n            uniform float time;\n            uniform vec2 mouse;\n            uniform vec2 resolution;\n\n            float snoise(vec3 uv, float res) {\n                const vec3 s = vec3(1e0, 1e2, 1e3);\n\n                uv *= res;\n\n                vec3 uv0 = floor(mod(uv, res)) * s;\n                vec3 uv1 = floor(mod(uv + vec3(1.0), res)) * s;\n\n                vec3 f = smoothstep(0.0, 1.0, fract(uv));\n\n                vec4 v = vec4(uv0.x + uv0.y + uv0.z,\n                        uv1.x + uv0.y + uv0.z,\n                        uv0.x + uv1.y + uv0.z,\n                        uv1.x + uv1.y + uv0.z);\n\n                vec4 r = fract(sin(v * 1e-1) * 1e3);\n                float r0 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\n                r = fract(sin((v + uv1.z - uv0.z) * 1e-1) * 1e3);\n                float r1 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\n                return mix(r0, r1, f.z) * 2.0 - 1.0;\n            }\n\n            void main() {\n                vec2 p = -0.5 + gl_FragCoord.xy / resolution.xy;\n                p.x *= resolution.x / resolution.y;\n                float lp = .02/length(p);\n                float ap = atan(p.x, p.y);\n\n                float time = time*.04-pow(time, .8)*(1. + .1*cos(time*0.04))*2.;\n\n                float r1 = 0.2;\n                if(lp <= r1){\n                    ap -= time*0.1+lp*9.;\n                    lp = sqrt(1.-lp/r1)*0.5;\n                }else{\n                    ap += time*0.1+lp*2.;\n                    lp -= r1;\n                }\n\n                lp = pow(lp*lp, 1./3.);\n\n                p = lp*vec2(sin(ap), cos(ap));\n\n                float color = 5.0 - (6.0 * lp);\n\n                vec3 coord = vec3(atan(p.x, p.y) / 6.2832 + 0.5, 0.4 * lp, 0.5);\n\n                float power = 2.0;\n                for (int i = 0; i < 6; i++) {\n                    power *= 2.0;\n                    color += (1.5 / power) * snoise(coord + vec3(0.0, -0.05 * time*2.0, 0.01 * time*2.0), 16.0 * power);\n                }\n                color = max(color, 0.0);\n                float c2 = color * color;\n                float c3 = color * c2;\n                vec3 fc = vec3(color * 0.34, c2*0.15, c3*0.85);\n                float f = fract(time);\n                //fc *= smoothstep(f-0.1, f, length(p)) - smoothstep(f, f+0.1, length(p));\n                gl_FragColor = vec4(length(fc)*vec3(1,02,0)*0.04, 1.0);\n            }\n        "},q.base={frag1:new Phaser.Display.BaseShader("shader_wave",q.shader.fragmentShader),frag2:new Phaser.Display.BaseShader("shader_wave",q.shader.fragmentShader2),wave:new Phaser.Display.BaseShader("shader_wave",q.shader.wave),vortex:new Phaser.Display.BaseShader("shader_vortex",q.shader.fragVortex),fire:new Phaser.Display.BaseShader("shader_fire",q.shader.fireShader),flare:new Phaser.Display.BaseShader("shader_flare",q.shader.flareShader),checkers:new Phaser.Display.BaseShader("shader_checkers",q.shader.checkers),hueTunnel:new Phaser.Display.BaseShader("shader_hue_tunnel",q.shader.hueTunnel),plasmaMask:new Phaser.Display.BaseShader("shader_plasma_mask",q.shader.plasmaMask),disco:new Phaser.Display.BaseShader("shader_disco",q.shader.disco),disco2:new Phaser.Display.BaseShader("shader_disco2",q.shader.disco2)},q.post={hueRotate:G,plasma:U,multi:V};var Y=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{c(o.next(e))}catch(e){i(e)}}function a(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))};class X{constructor(){}listen(e,t,n){const o=(e,t)=>{e.scene.settings.visible=!1,g.Process.app.ui.resize(e,t),null!==n&&n(e)},r=(e,t)=>{e.scene.settings.active&&o(e,t)};o(e,t),e.scale.on("resize",(()=>r(e,t)),e),screen.orientation.addEventListener("change",(()=>r(e,t))),screen.orientation.addEventListener("webkitfullscreenchange",(()=>r(e,t)))}callSizer(e){this.parent=new Phaser.Structs.Size(e.scale.gameSize.width,e.scale.gameSize.height).setSize(e.scale.gameSize.width,e.scale.gameSize.height),this.sizer=new Phaser.Structs.Size(e.cameras.main.width,e.cameras.main.height,Phaser.Structs.Size.FIT,this.parent).setSize(e.scale.gameSize.width,e.scale.gameSize.height)}checkOrientation(e,t){switch(t){case"Preload":return[!g.Config.isDesktop(e)&&g.Config.isLandscape(e)?1400:e.cameras.main.width,!g.Config.isDesktop(e)&&g.Config.isLandscape(e)?1800:e.cameras.main.height];case"Controller":return[e.cameras.main.width,e.cameras.main.height];case"Modal":return[450,800];case"HUD":return[!g.Config.isDesktop(e)&&g.Config.isLandscape(e)?1400:740,!g.Config.isDesktop(e)&&g.Config.isLandscape(e)?1800:960];case"PauseMenu":return g.Config.isDesktop(e)?[2200,980]:g.Config.isLandscape(e)?[1700,1200]:[800,1200];default:return null}}getPosition(e,t){return Y(this,void 0,void 0,(function*(){switch(t){case"Controller":case"Mini":return[e.cameras.main.width/2,e.cameras.main.height/2,!1];case"Preload":return g.Config.isDesktop(e)?[e.cameras.main.width/2,e.cameras.main.height/3.5,!1]:[g.Config.isLandscape(e)?180:e.cameras.main.width/2,g.Config.isLandscape(e)?e.cameras.main.height/2:e.cameras.main.height/3.5,!1];case"Modal":return[g.Config.isDesktop(e)?200:e.cameras.main.width/2,g.Config.isDesktop(e)?e.cameras.main.height/2:e.cameras.main.height/2.5,!1];case"HUD":return[!g.Config.isDesktop(e)&&g.Config.isLandscape(e)?e.cameras.main.width/3.5:e.cameras.main.width/2,e.cameras.main.height/2,!1];case"PauseMenu":return g.Config.isLandscape(e)?[g.Config.isDesktop(e)?30:420,g.Config.isDesktop(e)?e.cameras.main.height/2.4:650,!!g.Config.isDesktop(e)]:[e.cameras.main.width/2,g.Config.isDesktop(e)?e.cameras.main.height/2:e.cameras.main.height/2.5,!1];default:return[0,0,!1]}}))}setCamera(e,t,n,o){if(!0===o){let t=g.Config.isDesktop(e)?40:e.cameras.main.height>400?140:e.cameras.main.width/2-150;e.cameras.main.setPosition(t,screenTop),g.Config.isDesktop(e)||e.cameras.main.setZoom(Math.min(this.sizer.width/e.cameras.main.width,this.sizer.height/e.cameras.main.height))}else e.cameras.main.setViewport(Math.ceil(.5*(this.parent.width-this.sizer.width)),screenTop,this.sizer.width,this.sizer.height).setZoom(Math.max(this.sizer.width/e.cameras.main.width,this.sizer.height/e.cameras.main.height)).centerOn(t,n);e.scene.settings.visible=!0}resize(e,t){const n=this.checkOrientation(e,t);n&&(e.cameras.main.width=n[0],e.cameras.main.height=n[1],this.callSizer(e),setTimeout((()=>Y(this,void 0,void 0,(function*(){const n=yield this.getPosition(e,t);this.setCamera(e,n[0],n[1],n[2])}))),300))}}const Q=JSON.parse('{"image":[{"tiles":"assets/maps/overworld/tiles.png"},{"bar-venue-good":"assets/maps/overworld/bar-venue-good.png"},{"bar-venue-bad":"assets/maps/overworld/bar-venue-bad.png"},{"platformer":"assets/maps/platformer/platformer.png"},{"cave background":"assets/maps/platformer/cave.png"},{"swanky bubble":"assets/player/swanky_bubble.png"},{"menu tiles":"assets/images/menu_tiles.png"},{"cloud":"assets/images/cloud.png"}],"atlas":[{"player":["assets/player/player.png","assets/player/player.json"]},{"swanky_velvet":["assets/swanky_velvet.png","assets/swanky_velvet.json"]}],"tilemapTiledJSON":[{"Bar_Overworld":"assets/maps/overworld/bar.json"},{"Cave_Overworld":"assets/maps/overworld/cave.json"},{"Cave_Platformer":"assets/maps/platformer/cave.json"}]}');var W=n(404),H=n.n(W),Z=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{c(o.next(e))}catch(e){i(e)}}function a(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))};class J extends Phaser.Scene{constructor(){super("Boot")}init(){return Z(this,void 0,void 0,(function*(){this.gameData=yield g.Process.app.refreshApp(),this.input.keyboard.on("keyup",(()=>this.initFullscreen())),this.input.on("pointerup",(()=>this.initFullscreen())),document.addEventListener("fullscreenchange",(()=>this.cameras.main.centerOn(this.cameras.main.width/2,this.cameras.main.height/2)))}))}preload(){return Z(this,void 0,void 0,(function*(){this.load.json("resources_main",Q),this.load.plugin("rexvirtualjoystickplugin",H(),!0)}))}create(){return Z(this,void 0,void 0,(function*(){this.add.text(0,0,"",{fontSize:"1px",fontFamily:"Digitizer"}).setAlpha(0),this.time.delayedCall(500,(()=>{const e=new Phaser.Scenes.Systems(this,this.gameData);this.scene.run("Preload",e.config)}))}))}initFullscreen(){!this.scale.isFullscreen&&this.scale.fullscreen.available&&(this.scale.fullscreenTarget=document.getElementById(g.Process.app.parent),this.scale.startFullscreen())}}class $ extends Phaser.Scene{constructor(){super({key:"Preload"})}init(e){this.data=e}preload(){return e=this,t=void 0,o=function*(){yield g.Process.app.resourceParser(this,this.cache.json.get("resources_main"))},new((n=void 0)||(n=Promise))((function(r,i){function s(e){try{c(o.next(e))}catch(e){i(e)}}function a(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}));var e,t,n,o}create(e){var t;(t=this).anims.create({key:"sv_idleFront",frames:t.anims.generateFrameNames("player",{prefix:"fr",start:0,end:2,zeroPad:2}),frameRate:4,repeat:-1,yoyo:!0}),t.anims.create({key:"sv_idleBack",frames:t.anims.generateFrameNames("player",{prefix:"fr",frames:[10],zeroPad:2}),frameRate:4,repeat:-1,yoyo:!0}),t.anims.create({key:"sv_idleRight",frames:t.anims.generateFrameNames("player",{prefix:"fr",frames:[5,6,7],zeroPad:2}),frameRate:4,repeat:-1}),t.anims.create({key:"sv_idleLeft",frames:t.anims.generateFrameNames("player",{prefix:"fr",frames:[13,14,15,14],zeroPad:2}),frameRate:4,repeat:-1}),t.anims.create({key:"sv_walkRight",frames:t.anims.generateFrameNames("player",{prefix:"fr",frames:[7,8,7,9],zeroPad:2}),frameRate:4,repeat:-1}),t.anims.create({key:"sv_walkLeft",frames:t.anims.generateFrameNames("player",{prefix:"fr",frames:[15,16,15,17],zeroPad:2}),frameRate:4,repeat:-1}),t.anims.create({key:"sv_walkFront",frames:t.anims.generateFrameNames("player",{prefix:"fr",frames:[0,3,0,4],zeroPad:2}),frameRate:4,repeat:-1}),t.anims.create({key:"sv_walkBack",frames:t.anims.generateFrameNames("player",{prefix:"fr",frames:[10,11,10,12],zeroPad:2}),frameRate:4,repeat:-1}),t.anims.create({key:"sv_jumpRight",frames:t.anims.generateFrameNames("player",{prefix:"fr",frames:[18,19],zeroPad:2}),frameRate:16,repeat:0}),t.anims.create({key:"sv_jumpLeft",frames:t.anims.generateFrameNames("player",{prefix:"fr",frames:[20,21],zeroPad:2}),frameRate:16,repeat:0}),t.anims.create({key:"sv_attackRight",frames:t.anims.generateFrameNames("player",{prefix:"fr",frames:[22,23,24,24,24],zeroPad:2}),frameRate:24,repeat:0,yoyo:!0}),t.anims.create({key:"sv_attackLeft",frames:t.anims.generateFrameNames("player",{prefix:"fr",frames:[25,26,27,27,27],zeroPad:2}),frameRate:24,repeat:0,yoyo:!0}),function(e){e.anims.create({key:"swanky_dance",frames:e.anims.generateFrameNames("swanky_velvet",{prefix:"fr",start:3,end:5,zeroPad:2}),frameRate:8,repeat:-1,yoyo:!0})}(this),this.scene.run("MainMenu",e),this.scene.stop("Preload")}}function ee(e,t){return n=this,o=void 0,i=function*(){if(t.hasOwnProperty("image"))for(let n in t.image){let o=Object.keys(t.image[n]).find((e=>e));for(let r in t.image[n]){let i=t.image[n][r];e.load.image(o,i)}}if(t.hasOwnProperty("audio"))for(let n in t.audio){let o=Object.keys(t.audio[n]).find((e=>e));for(let r in t.audio[n]){let i=t.audio[n][r];e.load.audio(o,i)}}if(t.hasOwnProperty("obj"))for(let n in t.obj){let o=Object.keys(t.obj[n]).find((e=>e));for(let r in t.obj[n]){let i=t.obj[n][r][0],s=t.obj[n][r][1];e.load.obj(o,i,s)}}if(t.hasOwnProperty("atlas"))for(let n in t.atlas){let o=Object.keys(t.atlas[n]).find((e=>e));for(let r in t.atlas[n]){let i=t.atlas[n][r][0],s=t.atlas[n][r][1];e.load.atlas(o,i,s)}}if(t.hasOwnProperty("spritesheet"))for(let n in t.spritesheet){let o=Object.keys(t.spritesheet[n]).find((e=>e));for(let r in t.spritesheet[n]){let i=t.spritesheet[n][r][0],s=t.spritesheet[n][r][1];e.load.spritesheet(o,i,{frameWidth:s.frameWidth,frameHeight:s.frameHeight})}}if(t.hasOwnProperty("tilemapTiledJSON"))for(let n in t.tilemapTiledJSON){let o=Object.keys(t.tilemapTiledJSON[n]).find((e=>e));for(let r in t.tilemapTiledJSON[n]){let i=t.tilemapTiledJSON[n][r];e.load.tilemapTiledJSON(o,i)}}if(e.third)for(let n in t.assets){let o=Object.keys(t.assets[n]).find((e=>e));for(let r in t.assets[n]){let i=t.assets[n][r];e.third.load.preload(o,i)}}return t},new((r=void 0)||(r=Promise))((function(e,t){function s(e){try{c(i.next(e))}catch(e){t(e)}}function a(e){try{c(i.throw(e))}catch(e){t(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r((function(e){e(n)}))).then(s,a)}c((i=i.apply(n,o||[])).next())}));var n,o,r,i}class te extends Phaser.Scene{constructor(){super("Controller"),this.inputs=new g.Process.app.inputs(this)}create(){g.Config.mobileAndTabletCheck()?this.inputs.virtualControls(this):this.inputs.keyboardControls(this),g.Process.app.ui.listen(this,"Controller",this.resizeWindow)}resizeWindow(e){e.scene.settings.active&&!1!==g.Process.app.input.virtual&&setTimeout((()=>{"touch"===g.Process.app.input.type&&(null!==e.inputs.buttons.A&&e.inputs.buttons.A.setPosition(.76*e.cameras.main.width,e.cameras.main.height/2+20),null!==e.inputs.buttons.B&&e.inputs.buttons.B.setPosition(.9*e.cameras.main.width,e.cameras.main.height/2+80),null!==e.inputs.joystick.A&&e.inputs.joystick.A.self.setPosition(100,g.Config.isPortrait(e)?450:200))}),200)}}class ne extends Phaser.Scene{constructor(){super("HUD")}init(e){this._scene=e}create(){}update(){}}class oe extends Phaser.Scene{constructor(){super("MainMenu")}create(e){return t=this,n=void 0,r=function*(){this.data=e,this.cameras.main.fadeIn(3e3).setBackgroundColor(54259).centerOn(this.scale.width/2,this.scale.height/2),this.cloudGroup=this.add.group({removeCallback:e=>e.scene.cloudPool.add(e)}),this.cloudPool=this.add.group({removeCallback:e=>e.scene.cloudGroup.add(e)});const t=this.add.sprite(this.scale.width/2,this.scale.height/2-100,"swanky_velvet").play("swanky_dance");this.add.image(t.x,t.y+500,"menu tiles").setScale(3,4),this.makeClouds(Phaser.Math.Between(this.cameras.main.width/3,this.cameras.main.width)),this.time.delayedCall(1500,(()=>{const e=this.add.text(t.x-170,t.y+150,"START GAME",{fontSize:"3rem",fontFamily:"Digitizer"});this.time.delayedCall(500,(()=>{this.tweens.add({targets:e,alpha:0,duration:1500,ease:"Sine.easeOut",repeat:-1,yoyo:!0}),this.input.keyboard.once("keydown",(()=>this.startGame())),this.input.once("pointerdown",(()=>this.startGame()))}))}))},new((o=void 0)||(o=Promise))((function(e,i){function s(e){try{c(r.next(e))}catch(e){i(e)}}function a(e){try{c(r.throw(e))}catch(e){i(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof o?n:new o((function(e){e(n)}))).then(s,a)}c((r=r.apply(t,n||[])).next())}));var t,n,o,r}update(){let e=this.scale.width;this.cloudGroup.getChildren().forEach((t=>{t.x-=t.getData("xSpeed");let n=this.scale.width-t.x-t.displayWidth/2;e=Math.min(e,n),t.x<-t.displayWidth&&(this.cloudGroup.killAndHide(t),this.cloudGroup.remove(t))}),this),e>this.nextcloudDistance&&this.makeClouds()}startGame(){this.scene.run("GamePlay",this.data),this.scene.stop("MainMenu")}makeClouds(e){let t,n=e||innerWidth;this.cloudPool.getLength()?(t=this.cloudPool.getFirst(),t.active=!0,t.visible=!0,this.cloudPool.remove(t)):(t=this.add.sprite(n,Phaser.Math.Between(0,700),"cloud").setData({xSpeed:Phaser.Math.Between(1,2)}),this.cloudGroup.add(t)),t.displayWidth=1*Math.random()>.5?250:500,this.nextcloudDistance=Phaser.Math.Between(0,300)}}class re{static formatTimeByMilliseconds(e){const t=Number(Math.floor(e/1e3/60%60).toFixed(0)),n=Number(Math.floor(e/1e3%60).toFixed(0));return t+":"+(n<10?"0":"")+n}static decrementTime(e,t){"function"==typeof e.setTime&&(e.setTime(re.formatTimeByMilliseconds(t)),re.event=e.time.addEvent({delay:1e3,callback:()=>{t-=1e3,e.setTime(re.formatTimeByMilliseconds(t))},repeat:-1}))}static stopTimer(){re.event&&(re.event.paused=!0,re.event.remove(),re.event.destroy())}}var ie=function(e,t,n,o){return new(n||(n=Promise))((function(r,i){function s(e){try{c(o.next(e))}catch(e){i(e)}}function a(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))};class se{constructor(e){this.resourceParser=ee,this.game=O,this.clock=re,this.ajax=j,this.audio=M,this.events=K,this.inputs=I,this.shaders=q,this.text=Text,this.type=x().AUTO,this.transparent=!0,this.backgroundColor="#898989",this.pixelArt=!0,this.parent=e.parent,this.pipeline=[this.shaders.post.hueRotate],this.scale={mode:e.mode,autoCenter:e.position,width:e.width,height:e.height,min:{width:e.min.width,height:e.min.height},max:{width:e.max.width,height:e.max.height},scaleRatio:0,parentBottom:null,sizerBottom:null},this.dom={createContainer:!0},this.input={virtual:!0,gamepad:!0,type:e.inputType,mode:"A"},this.physics={default:"arcade"},this.interfaces=[te,ne,oe],this.scene=[J,$,...this.game.scene,...this.interfaces]}refreshApp(){return ie(this,void 0,void 0,(function*(){return g.Process.app.events.socket=null,g.Process.app.ui=new X,g.Process.app.gameData=new O.dataManager,g.Process.app.gameData}))}toggleDebugGraphics(e){}}window.onload=()=>ie(void 0,void 0,void 0,(function*(){g.Process.app=new se(g.Process),g.Process.game=new(x().Game)(g.Process.app)})),window.onbeforeunload=()=>ie(void 0,void 0,void 0,(function*(){return g.Process.app.account.logout()}))},204:()=>{console.log("%c %c %c %c %c Built using phaser-project-template %c https://github.com/yandeu/phaser-project-template","background: #ff0000","background: #ffff00","background: #00ff00","background: #00ffff","color: #fff; background: #000000;","background: none")},802:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var o=n(933),r=n.n(o),i=n(476),s=n.n(i)()(r());s.push([e.id,"#canvas-overlay{\r\n\tbackground-color: #ff0000;\r\n\topacity: 0;\r\n}\r\n\r\n#Leaderboard, noscript {\r\n\tfont-family: 'Bangers' , 'Arial Black', sans-serif;\r\n\ttext-shadow:1px 1px 0px #3c3d3d;\r\n\tcolor: #ff0000; \r\n\tmargin: auto 0;\r\n\ttext-align:center;\r\n\t-webkit-text-stroke: 0.06rem #000000;\r\n}\r\n\r\n#input-bar{\r\n\tcolor: #2ab7ec;\r\n}\r\n\r\n#game > div {\r\n\tz-index: 2;\r\n}\r\n\r\n#prompt-main-menu {\r\n\tposition: relative;\r\n\tdisplay: block;\r\n\tmargin: 0 auto;\r\n\tbox-sizing: border-box;\r\n\tborder: 0.5rem solid #ff0000;\r\n\tbackground-color: #000000;\r\n\tcursor: crosshair; \r\n}\r\n\r\np, #X-out {\r\n\ttext-align: center;\r\n}\r\n\r\n\r\n#inner-content form{\r\n\tpadding: 7%;\r\n\tmargin: 5% 15% 0 auto; \r\n\t\r\n}\r\n\r\n.loader {\r\n\r\n\tfont-size: 10px;\r\n\tmargin: 50px auto;\r\n\ttext-indent: -9999em;\r\n\twidth: 11em;\r\n\theight: 11em;\r\n\tborder-radius: 50%;\r\n\r\n\tbackground: -moz-linear-gradient(left, #ffffff 10%, rgba(255, 255, 255, 0) 42%);\r\n\tbackground: -webkit-linear-gradient(left, #ffffff 10%, rgba(255, 255, 255, 0) 42%);\r\n\tbackground: -o-linear-gradient(left, #ffffff 10%, rgba(255, 255, 255, 0) 42%);\r\n\tbackground: -ms-linear-gradient(left, #ffffff 10%, rgba(255, 255, 255, 0) 42%);\r\n\tbackground: linear-gradient(to right, #ffffff 10%, rgba(255, 255, 255, 0) 42%);\r\n\tposition: relative;\r\n\t-webkit-animation: load3 1.4s infinite linear;\r\n\tanimation: load3 1.4s infinite linear;\r\n\t-webkit-transform: translateZ(0);\r\n\t-ms-transform: translateZ(0);\r\n\ttransform: translateZ(0);\r\n}\r\n\r\n.loader:before {\r\n\twidth: 50%;\r\n\theight: 50%;\r\n\tbackground: #ffffff;\r\n\tborder-radius: 100% 0 0 0;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tcontent: '';\r\n}\r\n\r\n.loader:after {\r\n\tbackground: none;\r\n\twidth: 75%;\r\n\theight: 75%;\r\n\tborder-radius: 50%;\r\n\tcontent: '';\r\n\tmargin: auto;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tbottom: 0;\r\n\tright: 0;\r\n}\r\n  \r\n@-webkit-keyframes load3 {\r\n\t0% {\r\n\t  -webkit-transform: rotate(0deg);\r\n\t  transform: rotate(0deg);\r\n\t}\r\n\t100% {\r\n\t  -webkit-transform: rotate(360deg);\r\n\t  transform: rotate(360deg);\r\n\t}\r\n}\r\n@keyframes load3 {\r\n\t0% {\r\n\t  -webkit-transform: rotate(0deg);\r\n\t  transform: rotate(0deg);\r\n\t}\r\n\t100% {\r\n\t  -webkit-transform: rotate(360deg);\r\n\t  transform: rotate(360deg);\r\n\t}\r\n}\r\n\r\n.digitizer{\r\n\tfont-family: \"Digitizer\", sans-serif;\r\n}\r\n\r\n.digitizer p {\r\n\tfont-size: 1.8em;\r\n\tpadding: 8% 14% 15% 10%;\r\n\tdisplay: block;\r\n\tmargin: 0 auto;\r\n}\r\n.digitizer p:hover:not(#login-text){\r\n\tcolor: #ff0000;\r\n}\r\nul:hover{\r\n\tcolor: #ff0000;\r\n}\r\n.bangers{\r\n\tfont-family: 'Bangers', sans-serif;\r\n}\r\n.red-yellow{\r\n\tdisplay: flex;\r\n\tcolor: #ffff00;\r\n\t-webkit-text-stroke: 0.04rem rgb(255, 0, 0);\r\n}\r\n.form-input{\r\n\twidth: 80%;\r\n\tmargin: 0 auto;\r\n}\r\n\r\n\r\n\r\nhtml, body{\r\n\theight: 100%; \r\n\twidth: 100%;\r\n\tposition: fixed;\r\n\toverflow: hidden;\r\n\tbackground-repeat: repeat;\r\n\tbackground-color: #000000;\r\n\tmargin: 0 auto;\r\n\tpadding: 0;\r\n\t/*   user-select: none; */\r\n}\r\nh4, noscript{\r\n\tposition: relative;\r\n\tmargin: auto;\r\n\ttext-align: center;\r\n\tfont-family: 'Arial', sans-serif;\r\n\tcolor: #FFFFFF;\r\n}\r\nul, li{\r\n\ttext-decoration: none;\r\n\tlist-style: none;\r\n}\r\ninput{\r\n\tbackground: linear-gradient(top, #d6d7d7, #dee0e0);\r\n\tborder: 0.3rem solid #000000;\r\n\tborder-radius: 4px;\r\n\tbox-shadow: 0 1px #fff;\r\n\tbox-sizing: border-box;\r\n\tdisplay: block;\r\n\tcolor: #b9b9b9;\r\n\theight: 50px;\r\n\ttransition: box-shadow 0.3s;\r\n}\r\ninput[type=\"text\"] :focus \r\n{\r\n\tbox-shadow: 0 0 4px 1px rgba(55, 166, 155, 0.3);\r\n\toutline: 0;\r\n}\r\ninput[id=\"submit-username\"] \r\n{\r\n\tmargin-top: 8%;\r\n\theight: 55px;\r\n\tdisplay: block;\r\n\tfont-family: Arial, \"Helvetica\", sans-serif;\r\n\tfont-size: 16px;\r\n\tfont-weight: bold;\r\n\tcolor: #fff;\r\n\ttext-decoration: none;\r\n\ttext-transform: uppercase;\r\n\ttext-align: center;\r\n\ttext-shadow: 1px 1px 0px #3c3d3d;\r\n\tcursor: pointer;\r\n\tborder: none;  \r\n\tbackground-color: #ff0000;\r\n\tbackground-image: linear-gradient(top,#414600,#262900);\r\n\tborder-top-left-radius: 5px;\r\n\tborder-top-right-radius: 5px;\r\n\tborder-bottom-right-radius: 5px;\r\n\tborder-bottom-left-radius: 5px;\r\n\tbox-shadow: inset 0px 1px 0px #0e0e0e, 0px 5px 0px 0px #a03e06, 0px 10px 5px #999;\r\n}\r\ninput[type=\"submit\"] :active {\r\n\ttop:3px;\r\n\tbox-shadow: inset 0px 1px 0px #2ab7ec, 0px 2px 0px 0px #31524d, 0px 5px 3px #999;\r\n}    \r\n\r\n\r\n\r\n\r\n",""]);const a=s}},n={};function o(e){var r=n[e];if(void 0!==r)return r.exports;var i=n[e]={id:e,exports:{}};return t[e].call(i.exports,i,i.exports,o),i.exports}o.m=t,e=[],o.O=(t,n,r,i)=>{if(!n){var s=1/0;for(u=0;u<e.length;u++){for(var[n,r,i]=e[u],a=!0,c=0;c<n.length;c++)(!1&i||s>=i)&&Object.keys(o.O).every((e=>o.O[e](n[c])))?n.splice(c--,1):(a=!1,i<s&&(s=i));if(a){e.splice(u--,1);var l=r();void 0!==l&&(t=l)}}return t}i=i||0;for(var u=e.length;u>0&&e[u-1][2]>i;u--)e[u]=e[u-1];e[u]=[n,r,i]},o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0};o.O.j=t=>0===e[t];var t=(t,n)=>{var r,i,[s,a,c]=n,l=0;if(s.some((t=>0!==e[t]))){for(r in a)o.o(a,r)&&(o.m[r]=a[r]);if(c)var u=c(o)}for(t&&t(n);l<s.length;l++)i=s[l],o.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return o.O(u)},n=self.webpackChunkphaser_project_template=self.webpackChunkphaser_project_template||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),o.nc=void 0,o.O(void 0,[216],(()=>o(529)));var r=o.O(void 0,[216],(()=>o(204)));r=o.O(r)})();